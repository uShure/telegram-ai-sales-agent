#!/bin/bash

# ===============================================
# üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VLESS –ø—Ä–æ–∫—Å–∏ –¥–ª—è Telegram Bot
# ===============================================

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root
if [[ $EUID -ne 0 ]]; then
   log_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root"
   exit 1
fi

clear

echo "==============================================="
echo -e "${CYAN}üöÄ –ù–ê–°–¢–†–û–ô–ö–ê VLESS –ü–†–û–ö–°–ò${NC}"
echo "==============================================="
echo ""
echo -e "${YELLOW}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç VLESS –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ OpenAI${NC}"
echo ""

# ===============================================
# –£–°–¢–ê–ù–û–í–ö–ê XRAY
# ===============================================
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray-core..."

if ! command -v xray &> /dev/null; then
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray-core..."

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    ARCH=$(uname -m)
    case $ARCH in
        x86_64)
            XRAY_ARCH="64"
            ;;
        aarch64)
            XRAY_ARCH="arm64-v8a"
            ;;
        *)
            log_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
            exit 1
            ;;
    esac

    # –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é Xray
    LATEST_VERSION=$(curl -s https://api.github.com/repos/XTLS/Xray-core/releases/latest | grep tag_name | cut -d '"' -f 4)
    log_info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ Xray ${LATEST_VERSION}..."

    cd /tmp
    wget -q "https://github.com/XTLS/Xray-core/releases/download/${LATEST_VERSION}/Xray-linux-${XRAY_ARCH}.zip"

    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
    unzip -q Xray-linux-${XRAY_ARCH}.zip

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞
    mv xray /usr/local/bin/
    chmod +x /usr/local/bin/xray

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p /usr/local/etc/xray
    mkdir -p /var/log/xray

    # –û—á–∏—Å—Ç–∫–∞
    rm -f Xray-linux-${XRAY_ARCH}.zip geoip.dat geosite.dat LICENSE README.md

    log_info "Xray —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log_info "Xray —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# ===============================================
# –í–í–û–î –î–ê–ù–ù–´–• VLESS
# ===============================================
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VLESS –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."

echo ""
echo -e "${BLUE}–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ VLESS —Å–µ—Ä–≤–µ—Ä–∞:${NC}"
echo "-----------------------------------"

# –ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—É—é VLESS —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ —á–∞—Å—Ç—è–º
echo -n "–£ –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω–∞—è VLESS —Å—Å—ã–ª–∫–∞? (y/n): "
read HAS_LINK

if [ "$HAS_LINK" = "y" ]; then
    echo ""
    echo "–í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à—É VLESS —Å—Å—ã–ª–∫—É:"
    echo "(—Ñ–æ—Ä–º–∞—Ç: vless://UUID@SERVER:PORT?–ø–∞—Ä–∞–º–µ—Ç—Ä—ã)"
    echo -n "> "
    read VLESS_LINK

    # –ü–∞—Ä—Å–∏–º VLESS —Å—Å—ã–ª–∫—É
    # vless://uuid@server:port?type=tcp&security=tls&sni=domain#name

    # –ò–∑–≤–ª–µ–∫–∞–µ–º UUID
    UUID=$(echo "$VLESS_LINK" | sed -n 's/^vless:\/\/\([^@]*\)@.*/\1/p')

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∏ –ø–æ—Ä—Ç
    SERVER_PORT=$(echo "$VLESS_LINK" | sed -n 's/^vless:\/\/[^@]*@\([^?#]*\).*/\1/p')
    SERVER=$(echo "$SERVER_PORT" | cut -d: -f1)
    PORT=$(echo "$SERVER_PORT" | cut -d: -f2)

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    PARAMS=$(echo "$VLESS_LINK" | sed -n 's/^[^?]*?\([^#]*\).*/\1/p')

    # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    NETWORK=$(echo "$PARAMS" | sed -n 's/.*type=\([^&]*\).*/\1/p')
    SECURITY=$(echo "$PARAMS" | sed -n 's/.*security=\([^&]*\).*/\1/p')
    SNI=$(echo "$PARAMS" | sed -n 's/.*sni=\([^&]*\).*/\1/p')
    FLOW=$(echo "$PARAMS" | sed -n 's/.*flow=\([^&]*\).*/\1/p')

    # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    NETWORK=${NETWORK:-tcp}
    SECURITY=${SECURITY:-tls}

    echo ""
    echo -e "${GREEN}–†–∞—Å–ø–æ–∑–Ω–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:${NC}"
    echo "  –°–µ—Ä–≤–µ—Ä: $SERVER"
    echo "  –ü–æ—Ä—Ç: $PORT"
    echo "  UUID: ${UUID:0:8}..."
    echo "  –¢–∏–ø: $NETWORK"
    echo "  –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: $SECURITY"
    [ -n "$SNI" ] && echo "  SNI: $SNI"
    [ -n "$FLOW" ] && echo "  Flow: $FLOW"

else
    # –†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    echo ""
    echo -n "–ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ (IP –∏–ª–∏ –¥–æ–º–µ–Ω): "
    read SERVER

    echo -n "–ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ [443]: "
    read PORT
    PORT=${PORT:-443}

    echo -n "UUID: "
    read UUID

    echo -n "–¢–∏–ø —Å–µ—Ç–∏ (tcp/ws/grpc) [tcp]: "
    read NETWORK
    NETWORK=${NETWORK:-tcp}

    echo -n "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (none/tls/reality) [tls]: "
    read SECURITY
    SECURITY=${SECURITY:-tls}

    if [ "$SECURITY" = "tls" ]; then
        echo -n "SNI (Server Name Indication) [–æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º –¥–ª—è –∞–≤—Ç–æ]: "
        read SNI
    fi

    if [ "$NETWORK" = "tcp" ] && [ "$SECURITY" = "tls" ]; then
        echo -n "Flow (xtls-rprx-vision/none) [none]: "
        read FLOW
        FLOW=${FLOW:-none}
    fi

    if [ "$NETWORK" = "ws" ]; then
        echo -n "WebSocket –ø—É—Ç—å [/]: "
        read WS_PATH
        WS_PATH=${WS_PATH:-/}

        echo -n "WebSocket Host [–æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º]: "
        read WS_HOST
    fi
fi

# ===============================================
# –°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò XRAY
# ===============================================
log_step "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Xray..."

# –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
cat > /usr/local/etc/xray/config.json << EOF
{
  "log": {
    "loglevel": "warning",
    "access": "/var/log/xray/access.log",
    "error": "/var/log/xray/error.log"
  },
  "inbounds": [
    {
      "port": 1080,
      "listen": "127.0.0.1",
      "protocol": "socks",
      "settings": {
        "udp": true,
        "auth": "noauth"
      },
      "tag": "socks-in"
    },
    {
      "port": 8118,
      "listen": "127.0.0.1",
      "protocol": "http",
      "settings": {
        "allowTransparent": false
      },
      "tag": "http-in"
    }
  ],
  "outbounds": [
    {
      "protocol": "vless",
      "settings": {
        "vnext": [
          {
            "address": "$SERVER",
            "port": $PORT,
            "users": [
              {
                "id": "$UUID",
                "encryption": "none"$([ "$FLOW" != "none" ] && [ -n "$FLOW" ] && echo ",
                \"flow\": \"$FLOW\"")
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "$NETWORK"$([ "$SECURITY" = "tls" ] && echo ",
        \"security\": \"tls\",
        \"tlsSettings\": {
          \"allowInsecure\": false$([ -n "$SNI" ] && echo ",
          \"serverName\": \"$SNI\"")
        }")$([ "$NETWORK" = "ws" ] && echo ",
        \"wsSettings\": {
          \"path\": \"$WS_PATH\"$([ -n "$WS_HOST" ] && echo ",
          \"headers\": {
            \"Host\": \"$WS_HOST\"
          }")
        }")
      },
      "tag": "proxy"
    },
    {
      "protocol": "freedom",
      "settings": {},
      "tag": "direct"
    }
  ],
  "routing": {
    "domainStrategy": "AsIs",
    "rules": [
      {
        "type": "field",
        "inboundTag": ["socks-in", "http-in"],
        "outboundTag": "proxy"
      }
    ]
  }
}
EOF

log_info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# ===============================================
# –°–û–ó–î–ê–ù–ò–ï SYSTEMD –°–ï–†–í–ò–°–ê
# ===============================================
log_step "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Xray..."

cat > /etc/systemd/system/xray.service << 'EOF'
[Unit]
Description=Xray Service
After=network.target

[Service]
Type=simple
User=root
ExecStart=/usr/local/bin/xray run -config /usr/local/etc/xray/config.json
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏ –∑–∞–ø—É—Å–∫
systemctl daemon-reload
systemctl enable xray
systemctl restart xray

sleep 2

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
if systemctl is-active --quiet xray; then
    log_info "Xray –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Xray"
    journalctl -u xray -n 20
    exit 1
fi

# ===============================================
# –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ö–°–ò –í –ë–û–¢–ï
# ===============================================
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞..."

ENV_FILE="/home/telegram-bot/app/.env"

if [ -f "$ENV_FILE" ]; then
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    sed -i '/^HTTP_PROXY=/d' "$ENV_FILE"
    sed -i '/^HTTPS_PROXY=/d' "$ENV_FILE"
    sed -i '/^# HTTP_PROXY=/d' "$ENV_FILE"
    sed -i '/^# HTTPS_PROXY=/d' "$ENV_FILE"

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    echo "" >> "$ENV_FILE"
    echo "# VLESS Proxy Settings" >> "$ENV_FILE"
    echo "HTTP_PROXY=socks5://127.0.0.1:1080" >> "$ENV_FILE"
    echo "HTTPS_PROXY=socks5://127.0.0.1:1080" >> "$ENV_FILE"

    log_info "–ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞"
else
    log_warn "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–∫—Å–∏ –≤—Ä—É—á–Ω—É—é –≤ /home/telegram-bot/app/.env"
fi

# ===============================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò
# ===============================================
log_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."

echo ""
echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ SOCKS5 –ø—Ä–æ–∫—Å–∏... "
if nc -zv 127.0.0.1 1080 2>/dev/null; then
    echo -e "${GREEN}‚úì${NC}"
else
    echo -e "${RED}‚úó${NC}"
    log_error "SOCKS5 –ø—Ä–æ–∫—Å–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 1080"
fi

echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ HTTP –ø—Ä–æ–∫—Å–∏... "
if nc -zv 127.0.0.1 8118 2>/dev/null; then
    echo -e "${GREEN}‚úì${NC}"
else
    echo -e "${RED}‚úó${NC}"
    log_error "HTTP –ø—Ä–æ–∫—Å–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8118"
fi

echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ OpenAI —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏... "
if curl -s --socks5 127.0.0.1:1080 --max-time 10 https://api.openai.com/v1/models > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì OpenAI –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚úó OpenAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Telegram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏... "
if curl -s --socks5 127.0.0.1:1080 --max-time 10 https://api.telegram.org > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì Telegram –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${YELLOW}‚ö† Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ)${NC}"
fi

# ===============================================
# –°–û–ó–î–ê–ù–ò–ï –£–¢–ò–õ–ò–¢–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø
# ===============================================
log_step "–°–æ–∑–¥–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏..."

cat > /usr/local/bin/proxy << 'EOF'
#!/bin/bash

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

case "$1" in
    status)
        echo "============================="
        echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–∫—Å–∏"
        echo "============================="
        if systemctl is-active --quiet xray; then
            echo -e "Xray: ${GREEN}‚úì –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
            echo ""
            echo "–ü—Ä–æ–∫—Å–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:"
            echo "  SOCKS5: 127.0.0.1:1080"
            echo "  HTTP:   127.0.0.1:8118"
        else
            echo -e "Xray: ${RED}‚úó –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        fi
        ;;
    start)
        echo -e "${GREEN}–ó–∞–ø—É—Å–∫ –ø—Ä–æ–∫—Å–∏...${NC}"
        systemctl start xray
        sleep 2
        systemctl status xray --no-pager
        ;;
    stop)
        echo -e "${RED}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∫—Å–∏...${NC}"
        systemctl stop xray
        ;;
    restart)
        echo -e "${GREEN}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–∫—Å–∏...${NC}"
        systemctl restart xray
        sleep 2
        systemctl status xray --no-pager
        ;;
    test)
        echo "============================="
        echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏"
        echo "============================="

        echo -n "SOCKS5 (127.0.0.1:1080): "
        if nc -zv 127.0.0.1 1080 2>/dev/null; then
            echo -e "${GREEN}‚úì${NC}"
        else
            echo -e "${RED}‚úó${NC}"
        fi

        echo -n "HTTP (127.0.0.1:8118): "
        if nc -zv 127.0.0.1 8118 2>/dev/null; then
            echo -e "${GREEN}‚úì${NC}"
        else
            echo -e "${RED}‚úó${NC}"
        fi

        echo ""
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"

        echo -n "  OpenAI API: "
        if curl -s --socks5 127.0.0.1:1080 --max-time 5 https://api.openai.com/v1/models > /dev/null 2>&1; then
            echo -e "${GREEN}‚úì –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
        else
            echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        fi

        echo -n "  Telegram API: "
        if curl -s --socks5 127.0.0.1:1080 --max-time 5 https://api.telegram.org > /dev/null 2>&1; then
            echo -e "${GREEN}‚úì –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
        else
            echo -e "${YELLOW}‚ö† –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        fi

        echo -n "  Google: "
        if curl -s --socks5 127.0.0.1:1080 --max-time 5 https://www.google.com > /dev/null 2>&1; then
            echo -e "${GREEN}‚úì –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
        else
            echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        fi
        ;;
    logs)
        tail -f /var/log/xray/error.log
        ;;
    config)
        nano /usr/local/etc/xray/config.json
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: proxy {status|start|stop|restart|test|logs|config}"
        exit 1
        ;;
esac
EOF

chmod +x /usr/local/bin/proxy

# ===============================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï
# ===============================================
echo ""
echo "==============================================="
echo -e "${GREEN}‚úÖ VLESS –ü–†–û–ö–°–ò –£–°–ü–ï–®–ù–û –ù–ê–°–¢–†–û–ï–ù!${NC}"
echo "==============================================="
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∫—Å–∏:"
echo "  SOCKS5: 127.0.0.1:1080"
echo "  HTTP:   127.0.0.1:8118"
echo ""
echo "üìå –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏:"
echo "  proxy status  - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
echo "  proxy test    - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
echo "  proxy restart - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
echo "  proxy logs    - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo ""
echo "ü§ñ –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏ –≤ –±–æ—Ç–µ:"
echo -e "  ${CYAN}bot restart${NC}"
echo ""
echo "==============================================="
echo ""
log_warn "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ VLESS —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!"
echo ""
