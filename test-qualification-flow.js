#!/usr/bin/env bun

import {
  analyzeQualification,
  getQualificationQuestions,
  getShortCoursePresentation
} from './src/data/qualification-logic.ts';

console.log('üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–¢–û–ö–ê –ö–í–ê–õ–ò–§–ò–ö–ê–¶–ò–ò');
console.log('=' .repeat(60));

// –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥
const dialogs = [
  {
    messages: [],
    description: '–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞'
  },
  {
    messages: ['—Ö–æ—á—É —É—á–∏—Ç—å—Å—è'],
    description: '–ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ "—Ö–æ—á—É —É—á–∏—Ç—å—Å—è"'
  },
  {
    messages: ['—Ö–æ—á—É —É—á–∏—Ç—å—Å—è', '–æ—á–Ω–æ'],
    description: '–í—ã–±—Ä–∞–Ω —Ñ–æ—Ä–º–∞—Ç –û–ß–ù–û'
  },
  {
    messages: ['—Ö–æ—á—É —É—á–∏—Ç—å—Å—è', '–æ—á–Ω–æ', '—Å—Ç—Ä–∏–∂–∫–∏'],
    description: '–í—ã–±—Ä–∞–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –°–¢–†–ò–ñ–ö–ò'
  },
  {
    messages: ['—Ö–æ—á—É —É—á–∏—Ç—å—Å—è', '–æ—á–Ω–æ', '—Å—Ç—Ä–∏–∂–∫–∏', '5 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞—é'],
    description: '–£–∫–∞–∑–∞–Ω –æ–ø—ã—Ç 5 –ª–µ—Ç'
  }
];

dialogs.forEach((dialog, index) => {
  console.log(`\nüìç –®–∞–≥ ${index + 1}: ${dialog.description}`);
  console.log('-'.repeat(50));

  const qualification = analyzeQualification(dialog.messages);

  console.log('–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è:');
  console.log(`  ‚Ä¢ –§–æ—Ä–º–∞—Ç: ${qualification.format || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}`);
  console.log(`  ‚Ä¢ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${qualification.direction || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}`);
  console.log(`  ‚Ä¢ –û–ø—ã—Ç: ${qualification.experience || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}`);
  console.log(`  ‚Ä¢ –ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${qualification.qualified ? '–î–ê' : '–ù–ï–¢'}`);

  if (!qualification.qualified) {
    const questions = getQualificationQuestions(qualification);
    console.log('\nüí¨ –í–æ–ø—Ä–æ—Å –í–µ—Ä—ã:');
    console.log(questions);
  } else {
    console.log('\n‚úÖ –ö–ª–∏–µ–Ω—Ç –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!');

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫—É—Ä—Å—ã –¥–ª—è —Å—Ç—Ä–∏–∂–µ–∫
    const mockCourses = [
      { name: '–°—Ç—Ä–∏–∂–∫–∏: –§—É–Ω–¥–∞–º–µ–Ω—Ç', price: 60000, format: '–æ—Ñ–ª–∞–π–Ω' },
      { name: '–°—Ç—Ä–∏–∂–∫–∏ 2.0', price: 60000, format: '–æ—Ñ–ª–∞–π–Ω' },
      { name: '–ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏ 2.0', price: 70000, format: '–æ—Ñ–ª–∞–π–Ω' }
    ];

    const presentation = getShortCoursePresentation(mockCourses, qualification);
    console.log('\nüìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –∫—É—Ä—Å–æ–≤:');
    console.log(presentation);
  }
});

console.log('\n' + '=' .repeat(60));
console.log('\n‚úÖ –ò–¢–û–ì: –í—Å—è –ª–æ–≥–∏–∫–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
console.log('\n–ü–æ—Ä—è–¥–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:');
console.log('1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ —Ñ–æ—Ä–º–∞—Ç (–æ—á–Ω–æ/–æ–Ω–ª–∞–π–Ω)');
console.log('2Ô∏è‚É£ –ü–æ—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (—Å—Ç—Ä–∏–∂–∫–∏/–∫–æ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞)');
console.log('3Ô∏è‚É£ –ü–æ—Ç–æ–º –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã');
console.log('4Ô∏è‚É£ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –æ—Ç–ª–∏—á–∏–π');
console.log('5Ô∏è‚É£ –°–ø—Ä–∞—à–∏–≤–∞–µ–º: "–û –∫–∞–∫–æ–º —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ? 1, 2 –∏–ª–∏ 3"');
