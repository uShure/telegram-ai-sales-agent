const Database = require('bun:sqlite').default;
const fs = require('fs');
const path = require('path');

console.log('üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤...\n');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
const dataFile = './course-data.txt';
if (!fs.existsSync(dataFile)) {
  console.error('‚ùå –§–∞–π–ª course-data.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  process.exit(1);
}

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
const data = fs.readFileSync(dataFile, 'utf-8');
const lines = data.split('\n').filter(line => line.trim());

// –ü–∞—Ä—Å–∏–º –∫—É—Ä—Å—ã
const courses = [];
for (let i = 0; i < lines.length; i += 3) {
  if (i + 2 < lines.length) {
    const name = lines[i].trim();
    const format = lines[i + 1].trim();
    const priceStr = lines[i + 2].trim();
    
    const price = parseInt(priceStr.replace(/[^\d]/g, ''));
    
    if (name && format && !isNaN(price)) {
      courses.push({ name, format, price });
    }
  }
}

console.log(`üìö –ù–∞–π–¥–µ–Ω–æ –∫—É—Ä—Å–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ${courses.length}`);

// –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É
if (fs.existsSync('./courses.db')) {
  fs.unlinkSync('./courses.db');
}

// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É
const db = new Database('./courses.db');

// –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
db.exec(`
  CREATE TABLE courses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    price INTEGER NOT NULL,
    duration TEXT NOT NULL,
    description TEXT NOT NULL,
    format TEXT DEFAULT '–æ–Ω–ª–∞–π–Ω',
    benefits TEXT NOT NULL,
    targetAudience TEXT NOT NULL,
    curriculum TEXT NOT NULL,
    enrollmentUrl TEXT NOT NULL,
    active INTEGER DEFAULT 1,
    createdAt TEXT DEFAULT CURRENT_TIMESTAMP,
    updatedAt TEXT DEFAULT CURRENT_TIMESTAMP
  );
  
  CREATE INDEX idx_courses_active ON courses(active);
  CREATE INDEX idx_courses_price ON courses(price);
`);

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
function generateCourseData(name, format, price) {
  const duration = price > 100000 ? '6 –º–µ—Å—è—Ü–µ–≤' : 
                   price > 50000 ? '3 –º–µ—Å—è—Ü–∞' : 
                   price > 20000 ? '2 –º–µ—Å—è—Ü–∞' : 
                   price > 5000 ? '1 –º–µ—Å—è—Ü' : '1 —á–∞—Å';
  
  const description = `–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—É—Ä—Å "${name}" –≤ —Ñ–æ—Ä–º–∞—Ç–µ ${format}. ${
    name.includes('–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫') ? '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö.' :
    name.includes('—Å –Ω—É–ª—è') ? '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.' :
    '–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –∏ –º–µ—Ç–æ–¥–∏–∫.'
  }`;
  
  const benefits = name.includes('–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫') ? 
    '‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫\n‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω\n‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é\n‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7' :
    '‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç SOINTERA\n‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è\n‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –Ω–∞–≤—Å–µ–≥–¥–∞\n‚Ä¢ –ß–∞—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º';
  
  const targetAudience = price < 10000 ? 
    '‚Ä¢ –í—Å–µ –∂–µ–ª–∞—é—â–∏–µ\n‚Ä¢ –ù–∞—á–∏–Ω–∞—é—â–∏–µ –º–∞—Å—Ç–µ—Ä–∞\n‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã' :
    price > 100000 ?
    '‚Ä¢ –û–ø—ã—Ç–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞\n‚Ä¢ –í–ª–∞–¥–µ–ª—å—Ü—ã —Å–∞–ª–æ–Ω–æ–≤\n‚Ä¢ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏' :
    '‚Ä¢ –ú–∞—Å—Ç–µ—Ä–∞ —Å –æ–ø—ã—Ç–æ–º\n‚Ä¢ –í—ã–ø—É—Å–∫–Ω–∏–∫–∏ –±–∞–∑–æ–≤—ã—Ö –∫—É—Ä—Å–æ–≤\n‚Ä¢ –ê–º–±–∏—Ü–∏–æ–∑–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã';
  
  const curriculum = '–ú–æ–¥—É–ª—å 1: –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã\n' +
                     '–ú–æ–¥—É–ª—å 2: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏\n' +
                     '–ú–æ–¥—É–ª—å 3: –†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏\n' +
                     '–ú–æ–¥—É–ª—å 4: –†–∞–∑–≤–∏—Ç–∏–µ –±–∏–∑–Ω–µ—Å–∞';
  
  const urlName = name.toLowerCase()
    .replace(/\s+/g, '-')
    .replace(/[^\w\-–∞-—è]/gi, '');
  const enrollmentUrl = `https://sointera.com/courses/${urlName}`;
  
  return { duration, description, benefits, targetAudience, curriculum, enrollmentUrl };
}

// –í—Å—Ç–∞–≤–ª—è–µ–º –∫—É—Ä—Å—ã
const insert = db.prepare(`
  INSERT INTO courses (name, price, duration, description, format, benefits, targetAudience, curriculum, enrollmentUrl)
  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
`);

let added = 0;
for (const course of courses) {
  const data = generateCourseData(course.name, course.format, course.price);
  try {
    insert.run(
      course.name,
      course.price,
      data.duration,
      data.description,
      course.format,
      data.benefits,
      data.targetAudience,
      data.curriculum,
      data.enrollmentUrl
    );
    added++;
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${course.name} (${course.format}, ${course.price}‚ÇΩ)`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
const count = db.prepare('SELECT COUNT(*) as count FROM courses').get();
console.log(`\nüìä –í—Å–µ–≥–æ –∫—É—Ä—Å–æ–≤ –≤ –±–∞–∑–µ: ${count.count}`);

// –í–ê–ñ–ù–û: –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É
db.close();

// –ö–æ–ø–∏—Ä—É–µ–º –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
setTimeout(() => {
  try {
    fs.copyFileSync('./courses.db', '../telegram-admin-bot/courses.db');
    console.log('‚úÖ –ë–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err.message);
  }
}, 100);

console.log('\n‚úÖ –ì–æ—Ç–æ–≤–æ!');
