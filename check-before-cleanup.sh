#!/bin/bash

# ===============================================
# üîç –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π
# ===============================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

echo "==============================================="
echo -e "${CYAN}üîç –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø –°–ï–†–í–ï–†–ê${NC}"
echo "==============================================="
echo ""
echo -e "${YELLOW}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∂–µ—Ç, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ${NC}"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞
get_size() {
    if [ -d "$1" ] || [ -f "$1" ]; then
        du -sh "$1" 2>/dev/null | cut -f1
    else
        echo "0"
    fi
}

# ===============================================
# –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï
# ===============================================
echo -e "${BLUE}üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï${NC}"
echo "-----------------------------------"
echo "Hostname: $(hostname)"
echo "OS: $(lsb_release -d | cut -f2)"
echo "Kernel: $(uname -r)"
echo "Uptime: $(uptime -p)"
echo ""

# ===============================================
# –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í
# ===============================================
echo -e "${BLUE}üíæ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í${NC}"
echo "-----------------------------------"
echo "RAM: $(free -h | awk 'NR==2{printf "%s / %s (%.1f%%)", $3, $2, $3*100/$2}')"
echo "Disk: $(df -h / | awk 'NR==2{printf "%s / %s (%s)", $3, $2, $5}')"
echo "CPU cores: $(nproc)"
echo ""

# ===============================================
# DOCKER
# ===============================================
echo -e "${BLUE}üê≥ DOCKER${NC}"
echo "-----------------------------------"
if command -v docker &> /dev/null; then
    echo -e "${RED}Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"

    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    CONTAINERS=$(docker ps -aq | wc -l)
    if [ "$CONTAINERS" -gt 0 ]; then
        echo "  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: $CONTAINERS"
        docker ps -a --format "table {{.Names}}\t{{.Image}}\t{{.Status}}" | head -10
    fi

    # –û–±—Ä–∞–∑—ã
    IMAGES=$(docker images -q | wc -l)
    if [ "$IMAGES" -gt 0 ]; then
        echo "  –û–±—Ä–∞–∑–æ–≤: $IMAGES"
    fi

    # Volumes
    VOLUMES=$(docker volume ls -q | wc -l)
    if [ "$VOLUMES" -gt 0 ]; then
        echo "  Volumes: $VOLUMES"
    fi

    # –†–∞–∑–º–µ—Ä
    DOCKER_SIZE=$(get_size /var/lib/docker)
    echo "  –ó–∞–Ω–∏–º–∞–µ—Ç –º–µ—Å—Ç–∞: $DOCKER_SIZE"
else
    echo -e "${GREEN}Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi
echo ""

# ===============================================
# –í–ï–ë-–°–ï–†–í–ï–†–´
# ===============================================
echo -e "${BLUE}üåê –í–ï–ë-–°–ï–†–í–ï–†–´${NC}"
echo "-----------------------------------"
for service in nginx apache2 httpd; do
    if systemctl is-enabled --quiet $service 2>/dev/null; then
        echo -e "${RED}$service - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
        systemctl status $service --no-pager | grep "Active:" | sed 's/^/  /'
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
if [ -d "/var/www" ] && [ "$(ls -A /var/www)" ]; then
    echo -e "${RED}/var/www —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ - –ë–£–î–ï–¢ –û–ß–ò–©–ï–ù${NC}"
    WWW_SIZE=$(get_size /var/www)
    echo "  –†–∞–∑–º–µ—Ä: $WWW_SIZE"
    echo "  –°–∞–π—Ç–æ–≤: $(find /var/www -maxdepth 1 -type d | wc -l)"
fi
echo ""

# ===============================================
# NODE.JS –ò –ü–ê–ö–ï–¢–ù–´–ï –ú–ï–ù–ï–î–ñ–ï–†–´
# ===============================================
echo -e "${BLUE}üì¶ NODE.JS –ò –ü–ê–ö–ï–¢–ù–´–ï –ú–ï–ù–ï–î–ñ–ï–†–´${NC}"
echo "-----------------------------------"
if command -v node &> /dev/null; then
    echo -e "${RED}Node.js $(node -v) - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi
if command -v npm &> /dev/null; then
    echo -e "${RED}npm $(npm -v) - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi
if command -v yarn &> /dev/null; then
    echo -e "${RED}yarn $(yarn -v) - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi
if command -v bun &> /dev/null; then
    echo -e "${YELLOW}Bun $(bun -v) - –±—É–¥–µ—Ç –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi
echo ""

# ===============================================
# SYSTEMD –°–ï–†–í–ò–°–´
# ===============================================
echo -e "${BLUE}‚öôÔ∏è –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –°–ï–†–í–ò–°–´${NC}"
echo "-----------------------------------"
SERVICES=$(systemctl list-units --type=service --state=running | grep -v "ssh\|network\|systemd\|kernel" | grep -v "^UNIT" | wc -l)
if [ "$SERVICES" -gt 0 ]; then
    echo -e "${RED}–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: $SERVICES - –ë–£–î–£–¢ –û–°–¢–ê–ù–û–í–õ–ï–ù–´${NC}"
    systemctl list-units --type=service --state=running | grep -v "ssh\|network\|systemd\|kernel" | head -10
fi
echo ""

# ===============================================
# –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ò –î–û–ú–ê–®–ù–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ò
# ===============================================
echo -e "${BLUE}üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ò –î–ò–†–ï–ö–¢–û–†–ò–ò${NC}"
echo "-----------------------------------"
for dir in /home/*; do
    if [ -d "$dir" ] && [ "$dir" != "/home/root" ]; then
        USER=$(basename "$dir")
        SIZE=$(get_size "$dir")
        echo -e "${RED}$dir - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
        echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USER"
        echo "  –†–∞–∑–º–µ—Ä: $SIZE"
    fi
done
echo ""

# ===============================================
# –ë–ê–ó–´ –î–ê–ù–ù–´–•
# ===============================================
echo -e "${BLUE}üóÑÔ∏è –ë–ê–ó–´ –î–ê–ù–ù–´–•${NC}"
echo "-----------------------------------"
if command -v mysql &> /dev/null; then
    echo -e "${RED}MySQL - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi
if command -v psql &> /dev/null; then
    echo -e "${RED}PostgreSQL - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi
if command -v mongo &> /dev/null; then
    echo -e "${RED}MongoDB - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi
if command -v redis-cli &> /dev/null; then
    echo -e "${RED}Redis - –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù${NC}"
fi

# SQLite –±–∞–∑—ã
SQLITE_DBS=$(find /home -name "*.db" -o -name "*.sqlite" 2>/dev/null | wc -l)
if [ "$SQLITE_DBS" -gt 0 ]; then
    echo -e "${RED}SQLite –±–∞–∑ –Ω–∞–π–¥–µ–Ω–æ: $SQLITE_DBS - –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´${NC}"
fi
echo ""

# ===============================================
# CRON –ó–ê–î–ê–ß–ò
# ===============================================
echo -e "${BLUE}‚è∞ CRON –ó–ê–î–ê–ß–ò${NC}"
echo "-----------------------------------"
CRON_JOBS=$(crontab -l 2>/dev/null | grep -v "^#" | wc -l)
if [ "$CRON_JOBS" -gt 0 ]; then
    echo -e "${RED}Cron –∑–∞–¥–∞—á: $CRON_JOBS - –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´${NC}"
    crontab -l 2>/dev/null | grep -v "^#" | head -5
fi
echo ""

# ===============================================
# PYTHON –û–ö–†–£–ñ–ï–ù–ò–Ø
# ===============================================
echo -e "${BLUE}üêç PYTHON –û–ö–†–£–ñ–ï–ù–ò–Ø${NC}"
echo "-----------------------------------"
VENVS=$(find /opt /home -type d -name "venv*" -o -name "*env" 2>/dev/null | wc -l)
if [ "$VENVS" -gt 0 ]; then
    echo -e "${RED}–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π: $VENVS - –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´${NC}"
fi
echo ""

# ===============================================
# –î–†–£–ì–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ò
# ===============================================
echo -e "${BLUE}üìÅ –î–†–£–ì–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ò${NC}"
echo "-----------------------------------"
if [ -d "/opt" ] && [ "$(ls -A /opt)" ]; then
    OPT_SIZE=$(get_size /opt)
    echo -e "${RED}/opt - –ë–£–î–ï–¢ –û–ß–ò–©–ï–ù${NC}"
    echo "  –†–∞–∑–º–µ—Ä: $OPT_SIZE"
    echo "  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
    ls -la /opt | head -10 | sed 's/^/    /'
fi
echo ""

# ===============================================
# –ü–†–û–¶–ï–°–°–´
# ===============================================
echo -e "${BLUE}üîÑ –ê–ö–¢–ò–í–ù–´–ï –ü–†–û–¶–ï–°–°–´${NC}"
echo "-----------------------------------"
echo "Top 5 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–∞–º—è—Ç–∏:"
ps aux --sort=-%mem | head -6 | tail -5 | awk '{printf "  %-20s %s\n", $11, $4"%"}'
echo ""

# ===============================================
# –°–ï–¢–ï–í–´–ï –ü–û–†–¢–´
# ===============================================
echo -e "${BLUE}üîå –û–¢–ö–†–´–¢–´–ï –ü–û–†–¢–´${NC}"
echo "-----------------------------------"
netstat -tuln | grep LISTEN | grep -v "127.0.0.1" | head -10
echo ""

# ===============================================
# –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
# ===============================================
echo "==============================================="
echo -e "${CYAN}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo "==============================================="

TOTAL_TO_DELETE=0

# Docker
if command -v docker &> /dev/null; then
    DOCKER_SPACE=$(du -sb /var/lib/docker 2>/dev/null | cut -f1)
    TOTAL_TO_DELETE=$((TOTAL_TO_DELETE + DOCKER_SPACE))
fi

# Home –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
for dir in /home/*; do
    if [ -d "$dir" ] && [ "$dir" != "/home/root" ]; then
        DIR_SPACE=$(du -sb "$dir" 2>/dev/null | cut -f1)
        TOTAL_TO_DELETE=$((TOTAL_TO_DELETE + DIR_SPACE))
    fi
done

# /opt
if [ -d "/opt" ]; then
    OPT_SPACE=$(du -sb /opt 2>/dev/null | cut -f1)
    TOTAL_TO_DELETE=$((TOTAL_TO_DELETE + OPT_SPACE))
fi

# /var/www
if [ -d "/var/www" ]; then
    WWW_SPACE=$(du -sb /var/www 2>/dev/null | cut -f1)
    TOTAL_TO_DELETE=$((TOTAL_TO_DELETE + WWW_SPACE))
fi

# –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
if [ "$TOTAL_TO_DELETE" -gt 0 ]; then
    HUMAN_SIZE=$(numfmt --to=iec-i --suffix=B $TOTAL_TO_DELETE)
    echo -e "${RED}–ë—É–¥–µ—Ç –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: ~$HUMAN_SIZE${NC}"
fi

echo ""
echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û:${NC}"
echo "  - SSH –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
echo "  - –°–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo "  - –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –≤–∞–∂–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
echo ""
echo "==============================================="
echo -e "${GREEN}–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
echo -e "${CYAN}./cleanup-and-deploy.sh${NC}"
echo "==============================================="
