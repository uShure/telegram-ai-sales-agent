#!/bin/bash

# ===============================================
# üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
# ===============================================

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

ENV_FILE="/home/telegram-bot/app/.env"

clear

echo "==============================================="
echo -e "${CYAN}üåê –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ö–°–ò –î–õ–Ø TELEGRAM BOT${NC}"
echo "==============================================="
echo ""
echo -e "${YELLOW}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫${NC}"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env
update_env() {
    local key=$1
    local value=$2

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    value=$(echo "$value" | sed 's/[[\.*^$()+?{|]/\\&/g')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–ª—é—á
    if grep -q "^${key}=" "$ENV_FILE"; then
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        sed -i "s|^${key}=.*|${key}=${value}|" "$ENV_FILE"
    elif grep -q "^# ${key}=" "$ENV_FILE"; then
        # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º
        sed -i "s|^# ${key}=.*|${key}=${value}|" "$ENV_FILE"
    else
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
        echo "${key}=${value}" >> "$ENV_FILE"
    fi
}

# ===============================================
# –í–´–ë–û–† –¢–ò–ü–ê –ü–†–û–ö–°–ò
# ===============================================
echo -e "${BLUE}üìã –í–ê–†–ò–ê–ù–¢–´ –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ö–°–ò${NC}"
echo "-----------------------------------"
echo "1. –£ –º–µ–Ω—è –µ—Å—Ç—å —Å–≤–æ–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä"
echo "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ Cloudflare WARP"
echo "3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏ (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
echo "4. –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–∫—Å–∏"
echo ""
echo -n "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-4): "
read PROXY_CHOICE

case $PROXY_CHOICE in
    1)
        # ===============================================
        # –°–û–ë–°–¢–í–ï–ù–ù–´–ô –ü–†–û–ö–°–ò
        # ===============================================
        echo ""
        echo -e "${BLUE}üîß –ù–ê–°–¢–†–û–ô–ö–ê –°–û–ë–°–¢–í–ï–ù–ù–û–ì–û –ü–†–û–ö–°–ò${NC}"
        echo "-----------------------------------"
        echo "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞"
        echo ""

        echo -n "–ü—Ä–æ—Ç–æ–∫–æ–ª (http/https/socks5) [http]: "
        read PROXY_PROTOCOL
        PROXY_PROTOCOL=${PROXY_PROTOCOL:-http}

        echo -n "–ê–¥—Ä–µ—Å –ø—Ä–æ–∫—Å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: proxy.example.com): "
        read PROXY_HOST

        echo -n "–ü–æ—Ä—Ç –ø—Ä–æ–∫—Å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 8080): "
        read PROXY_PORT

        echo -n "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è? (y/n) [n]: "
        read NEED_AUTH

        if [ "$NEED_AUTH" = "y" ]; then
            echo -n "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "
            read PROXY_USER
            echo -n "–ü–∞—Ä–æ–ª—å: "
            read -s PROXY_PASS
            echo ""

            if [ "$PROXY_PROTOCOL" = "socks5" ]; then
                PROXY_URL="socks5://${PROXY_USER}:${PROXY_PASS}@${PROXY_HOST}:${PROXY_PORT}"
            else
                PROXY_URL="${PROXY_PROTOCOL}://${PROXY_USER}:${PROXY_PASS}@${PROXY_HOST}:${PROXY_PORT}"
            fi
        else
            if [ "$PROXY_PROTOCOL" = "socks5" ]; then
                PROXY_URL="socks5://${PROXY_HOST}:${PROXY_PORT}"
            else
                PROXY_URL="${PROXY_PROTOCOL}://${PROXY_HOST}:${PROXY_PORT}"
            fi
        fi

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        update_env "HTTP_PROXY" "$PROXY_URL"
        update_env "HTTPS_PROXY" "$PROXY_URL"

        echo ""
        echo -e "${GREEN}‚úì –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $PROXY_URL${NC}"
        ;;

    2)
        # ===============================================
        # CLOUDFLARE WARP
        # ===============================================
        echo ""
        echo -e "${BLUE}üöÄ –£–°–¢–ê–ù–û–í–ö–ê CLOUDFLARE WARP${NC}"
        echo "-----------------------------------"
        echo "Cloudflare WARP - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π VPN-—Å–µ—Ä–≤–∏—Å"
        echo ""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
        ARCH=$(uname -m)

        if [ "$ARCH" = "x86_64" ]; then
            echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WARP –¥–ª—è x86_64..."

            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Cloudflare
            curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WARP
            sudo apt-get update
            sudo apt-get install -y cloudflare-warp

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º
            echo "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è WARP..."
            warp-cli register

            echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ –ø—Ä–æ–∫—Å–∏..."
            warp-cli mode proxy

            echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ..."
            warp-cli connect

            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ WARP (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ—Ä—Ç 40000)
            PROXY_URL="socks5://127.0.0.1:40000"
            update_env "HTTP_PROXY" "$PROXY_URL"
            update_env "HTTPS_PROXY" "$PROXY_URL"

            echo ""
            echo -e "${GREEN}‚úì Cloudflare WARP —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
            echo -e "${GREEN}‚úì –ü—Ä–æ–∫—Å–∏: $PROXY_URL${NC}"

            # –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
            systemctl enable warp-cli

            # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ WARP
            cat > /usr/local/bin/check-warp << 'EOF'
#!/bin/bash
if ! warp-cli status | grep -q "Connected"; then
    echo "WARP –æ—Ç–∫–ª—é—á–µ–Ω. –ü–æ–¥–∫–ª—é—á–∞–µ–º..."
    warp-cli connect
fi
EOF
            chmod +x /usr/local/bin/check-warp

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ cron
            (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/local/bin/check-warp") | crontab -

        else
            echo -e "${RED}–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, WARP –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É $ARCH${NC}"
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç"
        fi
        ;;

    3)
        # ===============================================
        # –ü–£–ë–õ–ò–ß–ù–´–ï –ü–†–û–ö–°–ò
        # ===============================================
        echo ""
        echo -e "${YELLOW}‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—É–±–ª–∏—á–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ –Ω–µ–Ω–∞–¥–µ–∂–Ω—ã –∏ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã!${NC}"
        echo ""
        echo -e "${BLUE}–°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
        echo "-----------------------------------"
        echo "1. proxy.antizapret.prostovpn.org:3128 (HTTP)"
        echo "2. proxy-ssl.antizapret.prostovpn.org:3143 (HTTPS)"
        echo "3. –í–≤–µ—Å—Ç–∏ —Å–≤–æ–π –∞–¥—Ä–µ—Å"
        echo ""
        echo -n "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-3): "
        read PUBLIC_CHOICE

        case $PUBLIC_CHOICE in
            1)
                PROXY_URL="http://proxy.antizapret.prostovpn.org:3128"
                ;;
            2)
                PROXY_URL="https://proxy-ssl.antizapret.prostovpn.org:3143"
                ;;
            3)
                echo -n "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π URL –ø—Ä–æ–∫—Å–∏: "
                read PROXY_URL
                ;;
        esac

        update_env "HTTP_PROXY" "$PROXY_URL"
        update_env "HTTPS_PROXY" "$PROXY_URL"

        echo ""
        echo -e "${GREEN}‚úì –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $PROXY_URL${NC}"
        ;;

    4)
        echo ""
        echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –ø—Ä–æ–ø—É—â–µ–Ω–∞${NC}"
        echo "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –ø–æ–∑–∂–µ, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–≤ —Ñ–∞–π–ª:"
        echo "bot config"
        ;;
esac

# ===============================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò
# ===============================================
if [ "$PROXY_CHOICE" != "4" ]; then
    echo ""
    echo -e "${BLUE}üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò${NC}"
    echo "-----------------------------------"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ OpenAI
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ OpenAI API... "

    if [ -n "$PROXY_URL" ]; then
        export http_proxy="$PROXY_URL"
        export https_proxy="$PROXY_URL"
    fi

    if curl -s --max-time 10 https://api.openai.com/v1/models > /dev/null 2>&1; then
        echo -e "${GREEN}‚úì –£—Å–ø–µ—à–Ω–æ${NC}"
        OPENAI_OK=true
    else
        echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        OPENAI_OK=false
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Telegram API... "
    if curl -s --max-time 10 https://api.telegram.org > /dev/null 2>&1; then
        echo -e "${GREEN}‚úì –£—Å–ø–µ—à–Ω–æ${NC}"
        TELEGRAM_OK=true
    else
        echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        TELEGRAM_OK=false
    fi

    unset http_proxy
    unset https_proxy

    echo ""
    if [ "$OPENAI_OK" = true ] && [ "$TELEGRAM_OK" = true ]; then
        echo -e "${GREEN}‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!${NC}"
    elif [ "$OPENAI_OK" = false ]; then
        echo -e "${RED}‚ùå OpenAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –ø—Ä–æ–∫—Å–∏${NC}"
        echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä"
    elif [ "$TELEGRAM_OK" = false ]; then
        echo -e "${YELLOW}‚ö†Ô∏è Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ${NC}"
    fi
fi

# ===============================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
# ===============================================
echo ""
echo -e "${BLUE}üìù –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò${NC}"
echo "-----------------------------------"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ endpoint –¥–ª—è OpenAI
echo -n "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint –¥–ª—è OpenAI? (y/n) [n]: "
read USE_ALT_ENDPOINT

if [ "$USE_ALT_ENDPOINT" = "y" ]; then
    echo "–ü—Ä–∏–º–µ—Ä—ã –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö endpoint:"
    echo "1. https://api.openai-proxy.com/v1"
    echo "2. https://api.openai.azure.com/v1"
    echo "3. –í–≤–µ—Å—Ç–∏ —Å–≤–æ–π"
    echo ""
    echo -n "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-3): "
    read ENDPOINT_CHOICE

    case $ENDPOINT_CHOICE in
        1)
            OPENAI_ENDPOINT="https://api.openai-proxy.com/v1"
            ;;
        2)
            OPENAI_ENDPOINT="https://api.openai.azure.com/v1"
            ;;
        3)
            echo -n "–í–≤–µ–¥–∏—Ç–µ URL endpoint: "
            read OPENAI_ENDPOINT
            ;;
    esac

    update_env "OPENAI_API_BASE" "$OPENAI_ENDPOINT"
    echo -e "${GREEN}‚úì –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
fi

# ===============================================
# –°–û–•–†–ê–ù–ï–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# ===============================================
echo ""
echo -e "${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""
echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $ENV_FILE"
echo ""
echo "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
echo -e "${CYAN}bot restart${NC}"
echo ""

# ===============================================
# –°–û–ó–î–ê–ù–ò–ï –°–ü–†–ê–í–ö–ò
# ===============================================
cat > /home/telegram-bot/PROXY_HELP.md << 'EOF'
# üåê –°–ø—Ä–∞–≤–∫–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ–∫—Å–∏

## –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏

–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
```bash
grep PROXY /home/telegram-bot/app/.env
```

## –í–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–æ–≤

### 1. Cloudflare WARP (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π
- –ù–∞–¥–µ–∂–Ω—ã–π
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç

### 2. –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π VPS —Å –ø—Ä–æ–∫—Å–∏
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Shadowsocks –∏–ª–∏ V2Ray –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º VPS –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ.

### 3. –ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å—ã
- ProxyMesh
- Bright Data
- SmartProxy

### 4. –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
- proxy.antizapret.prostovpn.org:3128
- –ü—É–±–ª–∏—á–Ω—ã–µ SOCKS5 –ø—Ä–æ–∫—Å–∏

## –§–æ—Ä–º–∞—Ç—ã –ø—Ä–æ–∫—Å–∏ –≤ .env

```bash
# HTTP –ø—Ä–æ–∫—Å–∏
HTTP_PROXY=http://proxy.example.com:8080
HTTPS_PROXY=http://proxy.example.com:8080

# SOCKS5 –ø—Ä–æ–∫—Å–∏
HTTP_PROXY=socks5://127.0.0.1:1080
HTTPS_PROXY=socks5://127.0.0.1:1080

# –° –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
HTTP_PROXY=http://user:pass@proxy.example.com:8080
HTTPS_PROXY=http://user:pass@proxy.example.com:8080
```

## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–∫—Å–∏

```bash
# –¢–µ—Å—Ç OpenAI
export https_proxy="–≤–∞—à_–ø—Ä–æ–∫—Å–∏"
curl https://api.openai.com/v1/models

# –¢–µ—Å—Ç Telegram
curl https://api.telegram.org
```

## –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### OpenAI –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ SOCKS5 –≤–º–µ—Å—Ç–æ HTTP
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Cloudflare WARP
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint

### Telegram –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—Ä–æ–∫—Å–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç HTTPS
2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–µ–∑ –ø—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ Telegram –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)

### –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–∫—Å–∏ –≤ .env
2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: `bot restart`
EOF

echo -e "${BLUE}üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –ø—Ä–æ–∫—Å–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤:${NC}"
echo "/home/telegram-bot/PROXY_HELP.md"
echo ""
