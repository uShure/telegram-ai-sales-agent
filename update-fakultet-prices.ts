import { Database } from "bun:sqlite";

// –ö—É—Ä—Å—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞ —Ü–µ–Ω—É 8,950‚ÇΩ
const coursesToUpdate = [
  '–ö–æ—Ä–µ–π—Å–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏',
  '–§–∞–∫—É–ª—å—Ç–µ—Ç –ø–æ –Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–º –≤–æ–ª–æ—Å–∞–º',
  '–§–∞–∫—É–ª—å—Ç–µ—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–ª–æ–Ω–¥–∏–Ω–∫–∞–º–∏'
];

const newPrice = 8950; // –¶–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤

try {
  console.log('üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');

  const db = new Database("courses.db");

  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã
  const updateQuery = db.prepare("UPDATE Course SET price = ? WHERE title = ?");
  const selectQuery = db.prepare("SELECT title, price FROM Course WHERE title = ?");

  let updatedCount = 0;

  for (const courseTitle of coursesToUpdate) {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
    const current = selectQuery.get(courseTitle) as any;

    if (current) {
      const oldPrice = current.price;

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É
      const result = updateQuery.run(newPrice, courseTitle);

      if (result.changes > 0) {
        console.log(`‚úÖ ${courseTitle}`);
        console.log(`   –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ${oldPrice ? oldPrice.toLocaleString('ru-RU') : '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'} ‚ÇΩ`);
        console.log(`   –ù–æ–≤–∞—è —Ü–µ–Ω–∞: ${newPrice.toLocaleString('ru-RU')} ‚ÇΩ`);
        const diff = oldPrice ? oldPrice - newPrice : 0;
        console.log(`   –≠–∫–æ–Ω–æ–º–∏—è: ${diff.toLocaleString('ru-RU')} ‚ÇΩ (${diff > 0 ? '-' + Math.round(diff/oldPrice*100) + '%' : ''})\n`);
        updatedCount++;
      }
    } else {
      console.log(`‚ö†Ô∏è  –ö—É—Ä—Å "${courseTitle}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ\n`);
    }
  }

  console.log(`\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫—É—Ä—Å–æ–≤: ${updatedCount} –∏–∑ ${coursesToUpdate.length}`);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ã –∏ –∏—Ö —Ü–µ–Ω—ã
  console.log('\nüìö –í—Å–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ã –∏ –ø–æ—Ö–æ–∂–∏–µ –∫—É—Ä—Å—ã:\n');

  const fakultetQuery = db.query(`
    SELECT title, price, url
    FROM Course
    WHERE title LIKE '%—Ñ–∞–∫—É–ª—å—Ç–µ—Ç%'
       OR title LIKE '%–∫–æ—Ä–µ–π—Å–∫%'
       OR title LIKE '%—à–∫–æ–ª–∞%'
       OR price = ?
    ORDER BY title
  `);

  const fakultets = fakultetQuery.all(newPrice);

  fakultets.forEach((course: any) => {
    const isCorrect = course.price === newPrice;
    const status = isCorrect ? '‚úÖ' : '‚ùå';
    console.log(`${status} ${course.title}`);
    console.log(`   üí∞ ${course.price ? course.price.toLocaleString('ru-RU') + ' ‚ÇΩ' : '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    console.log(`   üîó ${course.url}\n`);
  });

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø —Å–∞–º—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  console.log('üíé –¢–æ–ø-10 —Å–∞–º—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤:\n');

  const cheapestQuery = db.query(`
    SELECT title, price
    FROM Course
    WHERE price IS NOT NULL
    ORDER BY price ASC
    LIMIT 10
  `);

  const cheapest = cheapestQuery.all();

  cheapest.forEach((course: any, index: number) => {
    console.log(`${index + 1}. ${course.title} - ${course.price.toLocaleString('ru-RU')} ‚ÇΩ`);
  });

  db.close();
  console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
}
