#!/usr/bin/env bun

const { Database } = require('bun:sqlite');
const fs = require('fs');

console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö conversations...\n');

// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É
const db = new Database('./conversations.db');

// –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º–æ–π
db.exec(`
    CREATE TABLE IF NOT EXISTS conversations (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id TEXT NOT NULL,
        user_name TEXT,
        user_username TEXT,
        message TEXT,
        is_from_user BOOLEAN,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
        first_message_date DATETIME,
        last_message_date DATETIME,
        status TEXT DEFAULT 'new',
        admin_notes TEXT,
        phone TEXT,
        email TEXT,
        course_interest TEXT,
        targetAudience TEXT,
        benefits TEXT,
        curriculum TEXT,
        UNIQUE(user_id, timestamp, message)
    );

    CREATE INDEX IF NOT EXISTS idx_user_id ON conversations(user_id);
    CREATE INDEX IF NOT EXISTS idx_timestamp ON conversations(timestamp);
    CREATE INDEX IF NOT EXISTS idx_status ON conversations(status);
    CREATE INDEX IF NOT EXISTS idx_targetAudience ON conversations(targetAudience);
`);

console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ conversations —Å–æ–∑–¥–∞–Ω–∞');

// –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —ç—Å–∫–∞–ª–∞—Ü–∏–∏
db.exec(`
    CREATE TABLE IF NOT EXISTS pending_notifications (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        data TEXT NOT NULL,
        sent BOOLEAN DEFAULT 0,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        sent_at DATETIME
    );

    CREATE TABLE IF NOT EXISTS escalations (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        client_id TEXT NOT NULL,
        client_name TEXT,
        category TEXT,
        reason TEXT,
        priority TEXT,
        message TEXT,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    );

    CREATE INDEX IF NOT EXISTS idx_escalations_client ON escalations(client_id);
    CREATE INDEX IF NOT EXISTS idx_escalations_category ON escalations(category);
    CREATE INDEX IF NOT EXISTS idx_pending_sent ON pending_notifications(sent);
`);

console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã –¥–ª—è —ç—Å–∫–∞–ª–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã');

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testClients = [
    {
        id: '123456789',
        name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        username: 'anna_petrova',
        status: 'interested'
    },
    {
        id: '987654321',
        name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
        username: 'maria_ivanova',
        status: 'new'
    },
    {
        id: '555666777',
        name: '–ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
        username: 'elena_sidorova',
        status: 'negotiating'
    }
];

const insertStmt = db.prepare(`
    INSERT INTO conversations (
        user_id, user_name, user_username, message, is_from_user,
        timestamp, first_message_date, last_message_date, status
    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
`);

testClients.forEach((client, index) => {
    const baseTime = new Date();
    const time1 = new Date(baseTime.getTime() - (index * 3600000) - 60000).toISOString();
    const time2 = new Date(baseTime.getTime() - (index * 3600000)).toISOString();

    // –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
    insertStmt.run(
        client.id,
        client.name,
        client.username,
        '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É —É–∑–Ω–∞—Ç—å –æ –≤–∞—à–∏—Ö –∫—É—Ä—Å–∞—Ö',
        true,
        time1,
        time1,
        time2,
        client.status
    );

    // –û—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞
    insertStmt.run(
        client.id,
        client.name,
        client.username,
        '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –Ø –í–µ—Ä–∞ –∏–∑ –∞–∫–∞–¥–µ–º–∏–∏ SOINTERA. –†–∞–¥–∞ –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å! –ö–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
        false,
        time2,
        time1,
        time2,
        client.status
    );
});

console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏');

// –ö–æ–ø–∏—Ä—É–µ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
const adminPath = '../telegram-admin-bot';
if (fs.existsSync(adminPath)) {
    if (fs.existsSync(`${adminPath}/conversations.db`)) {
        fs.unlinkSync(`${adminPath}/conversations.db`);
    }
    fs.copyFileSync('./conversations.db', `${adminPath}/conversations.db`);
    console.log('‚úÖ –ë–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å');
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
const stats = db.prepare(`
    SELECT COUNT(DISTINCT user_id) as clients,
           COUNT(*) as messages
    FROM conversations
`).get();

console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(`   –ö–ª–∏–µ–Ω—Ç–æ–≤: ${stats.clients}`);
console.log(`   –°–æ–æ–±—â–µ–Ω–∏–π: ${stats.messages}`);

db.close();

console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö conversations —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
