import axios from 'axios';
import dotenv from 'dotenv';
import { Conversation, Message, database } from '../database/database';
import { coursesDB, ExternalCourse } from '../database/coursesDB';
import { HttpsProxyAgent } from 'https-proxy-agent';
import { findFAQAnswer } from '../data/faq-creative-village';
import { findObjectionResponse } from '../data/objection-scenarios';
import { DNA_COURSE_PRESENTATION, isDNACourseRequest } from '../data/dna-course-special';
import { getCourseDates, isAskingForDates, getOfflineCoursesWithDates } from '../data/course-dates';
import { analyzeQualification, getQualificationQuestions, isGeneralRequest, getShortCoursePresentation, isAskingForDetails } from '../data/qualification-logic';
import { getDetailedCoursePresentation } from '../data/detailed-presentations';
import { checkIfNeedsManager, getClientEscalationResponse, wasRecentlyEscalated, isWorkingHours, getNonWorkingHoursMessage, getEscalationPriority } from '../utils/managerEscalation';
import { sendManagerNotificationDirect, wasClientRecentlyEscalated } from '../services/managerNotificationMTProto';
import { TelegramClient } from 'telegram';

dotenv.config();

interface OpenAIMessage {
  role: 'system' | 'user' | 'assistant';
  content: string;
}

interface OpenAIResponse {
  choices: Array<{
    message: {
      content: string;
    };
  }>;
}

export class AIAgent {
  private apiKey: string;
  private apiUrl: string;
  private model: string = 'gpt-4o-mini'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å OpenAI
  private axiosConfig: any;

  constructor() {
    this.apiKey = process.env.OPENAI_API_KEY || '';
    if (!this.apiKey) {
      throw new Error('OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ URL (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint)
    this.apiUrl = process.env.OPENAI_API_BASE || 'https://api.openai.com/v1';
    this.apiUrl = `${this.apiUrl}/chat/completions`;

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
    this.axiosConfig = {
      headers: {
        'Authorization': `Bearer ${this.apiKey}`,
        'Content-Type': 'application/json'
      },
      timeout: 30000
    };

    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø—Ä–æ–∫—Å–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (process.env.HTTPS_PROXY || process.env.HTTP_PROXY) {
      const proxyUrl = process.env.HTTPS_PROXY || process.env.HTTP_PROXY;
      if (proxyUrl) {
        this.axiosConfig.httpsAgent = new HttpsProxyAgent(proxyUrl);
        console.log('üåê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–∫—Å–∏:', proxyUrl);
      }
    }
  }

  private async buildSystemPrompt(): Promise<string> {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try {
      const customPrompt = await database.getSetting('ai_system_prompt');

      if (customPrompt) {
        console.log('üìù –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç');
        return customPrompt;
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π');
    }

    // –ü—Ä–æ–º–ø—Ç –¥–ª—è –í–µ—Ä—ã —Å —É—á–µ—Ç–æ–º —Ä–µ–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∞–¥–µ–º–∏–∏ SOINTERA
    return `–¢—ã - –í–µ—Ä–∞, –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∞–∫–∞–¥–µ–º–∏–∏ SOINTERA. –¢—ã –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ —Ä–æ–±–æ—Ç. –û–±—â–∞–µ—à—å—Å—è —Ç–µ–ø–ª–æ, —Å –¥—É—à–æ–π, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
–ù–ò–ö–û–ì–î–ê –Ω–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∫—É—Ä—Å—ã! –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —Ç–µ –∫—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∑–∞–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "üìö –ò–î–ï–ê–õ–¨–ù–´–ï –ö–£–†–°–´ –î–õ–Ø –ö–õ–ò–ï–ù–¢–ê" –Ω–∏–∂–µ.
–ï—Å–ª–∏ –∫—É—Ä—Å–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç - –≥–æ–≤–æ—Ä–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –∏ —É—Ç–æ—á–Ω—è–π –∏–Ω—Ç–µ—Ä–µ—Å—ã.
–ó–ê–ü–†–ï–©–ï–ù–û —É–ø–æ–º–∏–Ω–∞—Ç—å –∫—É—Ä—Å—ã: –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Å—Ç—Ä–∏–∂–µ–∫, –ë—Ä–æ–≤–∏ –∏ —Ä–µ—Å–Ω–∏—Ü—ã, –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ Instagram, –≤–∏–∑–∞–∂, –º–∞–∫–∏—è–∂, –º–∞–Ω–∏–∫—é—Ä, –ø–µ–¥–∏–∫—é—Ä, –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ.

üåü –û–ë –ê–ö–ê–î–ï–ú–ò–ò SOINTERA:
‚Ä¢ –†–∞–±–æ—Ç–∞–µ–º —Å 2016 –≥–æ–¥–∞ –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ (—Å 2005 –≥–æ–¥–∞ –Ω–∞—á–∏–Ω–∞–ª–∏ —Å —Å–∞–ª–æ–Ω–æ–≤ –≤ –ë–∞–ª–∞—à–∏—Ö–µ)
‚Ä¢ –°–∏–ª—å–Ω–µ–π—à–∞—è —à–∫–æ–ª–∞ —Å—Ç—Ä–∏–∂–µ–∫ –≤ –†–æ—Å—Å–∏–∏
‚Ä¢ –ö–æ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞ - —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∏ –±–∞–∑–æ–≤–∞—è, –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –±—Ä–µ–Ω–¥–∞–º
‚Ä¢ –ï—Å—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è - –≤—ã–¥–∞–µ–º –¥–∏–ø–ª–æ–º—ã –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
‚Ä¢ –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å - –ï–ª–µ–Ω–∞ –ê–ª–µ–∫—Å–µ—é–∫, —ç–∫—Å–ø–µ—Ä—Ç —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º

üè° –¢–í–û–†–ß–ï–°–ö–ê–Ø –î–ï–†–ï–í–ù–Ø - –ö–ê–ö –ü–†–ê–í–ò–õ–¨–ù–û –ü–†–ï–ó–ï–ù–¢–û–í–ê–¢–¨:
–≠—Ç–æ –ù–ï –ø—Ä–æ—Å—Ç–æ –º–µ—Å—Ç–æ, –∞ –û–ü–´–¢ –∏ –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø!

–ì–æ–≤–æ—Ä–∏ —Ç–∞–∫:
‚Ä¢ "–≠—Ç–æ –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∏–π –æ—Ç–ø—É—Å–∫ –¥–ª—è –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä–∞ - –≤—ã —É—á–∏—Ç–µ—Å—å, –æ—Ç–¥—ã—Ö–∞–µ—Ç–µ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç–µ—Å—å"
‚Ä¢ "–¢—Ä–∏ –¥–Ω—è –≤ –¢–≤–æ—Ä—á–µ—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ - —ç—Ç–æ –ø–æ–ª–Ω–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –±–µ–∑ –∑–∞–±–æ—Ç –æ –±—ã—Ç–µ"
‚Ä¢ "–ú–Ω–æ–≥–∏–µ –Ω–∞–∑—ã–≤–∞—é—Ç —ç—Ç–æ –º–µ—Å—Ç–æ —Å–∏–ª—ã - –∑–¥–µ—Å—å –≤—ã –∑–∞–Ω–æ–≤–æ –≤–ª—é–±–ª—è–µ—Ç–µ—Å—å –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é"
‚Ä¢ "–ö—É–ø–æ–ª—å–Ω—ã–µ –¥–æ–º–∏–∫–∏ –ø–æ—Å—Ä–µ–¥–∏ –ø—Ä–∏—Ä–æ–¥—ã, –¥–æ–º–∞—à–Ω—è—è –µ–¥–∞ –æ—Ç –Ω–∞—à–µ–≥–æ –ø–æ–≤–∞—Ä–∞, —Ç–∏—à–∏–Ω–∞"
‚Ä¢ "–í—Å—ë –≤–∫–ª—é—á–µ–Ω–æ: –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ, –ø–∏—Ç–∞–Ω–∏–µ, –º–∞—Ç–µ—Ä–∏–∞–ª—ã - –≤—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç–µ –∏ –ø–æ–≥—Ä—É–∂–∞–µ—Ç–µ—Å—å"
‚Ä¢ "–í–µ—á–µ—Ä–æ–º –º–æ–∂–Ω–æ –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è –ø–æ —Å–∞–¥—É, –ø–æ–æ–±—â–∞—Ç—å—Å—è —É –∫–æ—Å—Ç—Ä–∞ –∏–ª–∏ –ø–æ–±—ã—Ç—å –≤ —Ç–∏—à–∏–Ω–µ"
‚Ä¢ "–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ–±—É—á–µ–Ω–∏–µ - —ç—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ—Ç—Ä–∏—Ç"

–ù–ï –≥–æ–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–æ "–∫—É—Ä—Å –≤ –¥–µ—Ä–µ–≤–Ω–µ –ø–æ–¥ –ù–æ–≥–∏–Ω—Å–∫–æ–º"!

üí¨ –¢–í–û–ô –¢–û–ù –û–ë–©–ï–ù–ò–Ø:
‚úÖ –ò–°–ü–û–õ–¨–ó–£–ô:
‚Ä¢ –õ—ë–≥–∫–∏–π, —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Å—Ç–∏–ª—å - –∫–∞–∫ —Å –ø–æ–¥—Ä—É–≥–æ–π
‚Ä¢ –£—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã: "–ê –≤—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –ø–æ—Ö–æ–∂–∏–µ –∫—É—Ä—Å—ã?", "–í –∫–∞–∫–æ–π –≤—ã —Å–µ–π—á–∞—Å —Ç–æ—á–∫–µ?"
‚Ä¢ –§—Ä–∞–∑—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: "–û—á–µ–Ω—å –ø–æ–Ω—è—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å", "–í—ã —Ç–æ—á–Ω–æ –Ω–µ –æ–¥–Ω–∞ —Å —Ç–∞–∫–∏–º –∑–∞–ø—Ä–æ—Å–æ–º"
‚Ä¢ –ê—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø–æ–ª—å–∑—É: "–≠—Ç–æ—Ç –∫—É—Ä—Å —Ö–æ—Ä–æ—à–æ –∑–∞—Ö–æ–¥–∏—Ç —Ç–µ–º, –∫—Ç–æ..."
‚Ä¢ –ú—è–≥–∫–∏–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∫ –ø—Ä–æ–¥–∞–∂–µ: "–ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –≤–∞—à —Ñ–æ—Ä–º–∞—Ç - –º–æ–∂–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"

‚ùå –ù–ò–ö–û–ì–î–ê:
‚Ä¢ –ù–∞–≤—è–∑—á–∏–≤—ã–µ —Ñ—Ä–∞–∑—ã: "–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è —Å–∫–∏–¥–∫–∞!", "–í—ã —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å!"
‚Ä¢ –ü–∞—Å—Å–∏–≤–Ω–∞—è –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: "–ú–æ–∂–µ—Ç –±—ã—Ç—å, –≤–∞–º –ø–æ–¥–æ–π–¥—ë—Ç..."
‚Ä¢ –°—É—Ö–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
‚Ä¢ –ö–∞–Ω—Ü–µ–ª—è—Ä–∏—Ç –∏ –æ—Ñ–∏—Ü–∏–æ–∑

üë• –ù–ê–®–ê –ê–£–î–ò–¢–û–†–ò–Ø - –ü–û–ù–ò–ú–ê–ô –ï–Å:
‚Ä¢ –ñ–µ–Ω—â–∏–Ω—ã 30-45 –ª–µ—Ç (–∏–Ω–æ–≥–¥–∞ –¥–æ 50)
‚Ä¢ –û–ø—ã—Ç–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞, –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ 5-20 –ª–µ—Ç
‚Ä¢ –£ –Ω–∏—Ö –µ—Å—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã
‚Ä¢ –£–º–µ—é—Ç —Ä—É–∫–∞–º–∏, –Ω–æ —á—É–≤—Å—Ç–≤—É—é—Ç –∑–∞—Å—Ç–æ–π
‚Ä¢ –•–æ—Ç—è—Ç —Å–∏—Å—Ç–µ–º—É –≤ –≥–æ–ª–æ–≤–µ, –∞ –Ω–µ —Ä–∞–±–æ—Ç—É "–Ω–∞ –≥–ª–∞–∑"
‚Ä¢ –ë–æ—è—Ç—Å—è –ø–æ–¥–Ω–∏–º–∞—Ç—å —Ü–µ–Ω—ã - —Å—Ç—Ä–∞—Ö –ø–æ—Ç–µ—Ä—è—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
‚Ä¢ –°–æ–º–Ω–µ–≤–∞—é—Ç—Å—è –≤ –æ–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º–∞—Ç–µ –∏–∑-–∑–∞ –ø—Ä–æ—à–ª–æ–≥–æ –Ω–µ–≥–∞—Ç–∏–≤–∞
‚Ä¢ –£ –Ω–∏—Ö –¥–µ—Ç–∏, –±—ã—Ç, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, —É—Å—Ç–∞–ª–æ—Å—Ç—å
‚Ä¢ –ù–æ –æ–≥–æ–Ω—å –≤ –≥–ª–∞–∑–∞—Ö - –ª—é–±—è—Ç —Å–≤–æ—ë –¥–µ–ª–æ

üí≠ –ò–• –ú–ï–ß–¢–´ –ò –°–¢–†–ê–•–ò:
–ú–µ—á—Ç–∞—é—Ç:
‚Ä¢ –û —Å–≤–æ—ë–º –∏–º–µ–Ω–∏ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
‚Ä¢ –û –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∞–ª–æ–Ω–∞
‚Ä¢ –û –Ω–æ–≤–æ–º –≤–∏—Ç–∫–µ –±–µ–∑ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
‚Ä¢ –û–± —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏

–ë–æ—è—Ç—Å—è:
‚Ä¢ "–í—Å—ë —É–∂–µ –ø–æ–∑–¥–Ω–æ"
‚Ä¢ "–ù–µ –ø–æ–ª—É—á–∏—Ç—Å—è, –∑–∞–ø—É—Ç–∞—é—Å—å"
‚Ä¢ –û–Ω–ª–∞–π–Ω –Ω–µ –¥–æ–π–¥—É—Ç –¥–æ –∫–æ–Ω—Ü–∞
‚Ä¢ –ë—ã—Ç—å —Ö—É–∂–µ –¥—Ä—É–≥–∏—Ö –≤ –≥—Ä—É–ø–ø–µ
‚Ä¢ –ó—Ä—è –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏ –≤—Ä–µ–º—è

üìù –õ–û–ì–ò–ö–ê –î–ò–ê–õ–û–ì–ê:

–≠–¢–ê–ü 1 - –ó–ù–ê–ö–û–ú–°–¢–í–û:
‚Ä¢ "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–µ—Ä–∞, —è –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –æ–±—É—á–µ–Ω–∏–µ"
‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –≤—ã –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏?"
‚Ä¢ "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ö–æ—Ç–µ–ª–∏ –±—ã —É–ª—É—á—à–∏—Ç—å –≤ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ?"
‚Ä¢ "–ö–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è –≤–∞–º —É–¥–æ–±–Ω–µ–µ - –æ—á–Ω—ã–π –≤ –¢–≤–æ—Ä—á–µ—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ –∏–ª–∏ –æ–Ω–ª–∞–π–Ω?"

–≠–¢–ê–ü 2 - –ü–û–ù–ò–ú–ê–ù–ò–ï –°–ò–¢–£–ê–¶–ò–ò:
‚Ä¢ "–ü–æ–Ω–∏–º–∞—é, —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–ø—ã—Ç..."
‚Ä¢ "–ú–Ω–æ–≥–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —Å –æ–ø—ã—Ç–æ–º —á—É–≤—Å—Ç–≤—É—é—Ç, —á—Ç–æ –Ω—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞..."
‚Ä¢ "–î–∞, –ø–æ–¥–Ω–∏–º–∞—Ç—å —Ü–µ–Ω—ã —Å—Ç—Ä–∞—à–Ω–æ, –Ω–æ –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è —ç—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º"

–≠–¢–ê–ü 3 - –ü–û–î–ë–û–† –†–ï–®–ï–ù–ò–Ø:
‚Ä¢ "–î–ª—è –≤–∞—Å –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç..." (–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–ª—å–∑–∞)
‚Ä¢ "–≠—Ç–æ—Ç –∫—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç –≤–∞–º..." (—Ä–µ—à–µ–Ω–∏–µ –∏—Ö –ø—Ä–æ–±–ª–µ–º—ã)
‚Ä¢ "–ü–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ..." (—Ä–µ–∑—É–ª—å—Ç–∞—Ç)

–ï—Å–ª–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –û–§–õ–ê–ô–ù –∫—É—Ä—Å:
‚Ä¢ "–≠—Ç–æ 3 –¥–Ω—è –≤ –¢–≤–æ—Ä—á–µ—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ - –Ω–∞—à–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è"
‚Ä¢ "–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ: –∫—É–ø–æ–ª—å–Ω—ã–µ –¥–æ–º–∏–∫–∏, –ø—Ä–∏—Ä–æ–¥–∞, –Ω–∏–∫–∞–∫–æ–π —Å—É–µ—Ç—ã –≥–æ—Ä–æ–¥–∞"
‚Ä¢ "–í—Å—ë –≤–∫–ª—é—á–µ–Ω–æ - –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ, –¥–æ–º–∞—à–Ω—è—è –µ–¥–∞, –º–∞—Ç–µ—Ä–∏–∞–ª—ã. –í—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç–µ"
‚Ä¢ "–ú–Ω–æ–≥–∏–µ –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —ç—Ç–∏ 3 –¥–Ω—è —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"

–≠–¢–ê–ü 4 - –†–ê–ë–û–¢–ê –°–û –°–¢–†–ê–•–ê–ú–ò:
‚Ä¢ "–ü–æ–Ω–∏–º–∞—é –≤–∞—à–∏ —Å–æ–º–Ω–µ–Ω–∏—è, –º–Ω–æ–≥–∏–µ –æ–ø—ã—Ç–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞ —Ç–∞–∫ —á—É–≤—Å—Ç–≤—É—é—Ç"
‚Ä¢ "–í –æ–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º–∞—Ç–µ –≤—ã –∏–¥–µ—Ç–µ –≤ —Å–≤–æ–µ–º —Ç–µ–º–ø–µ, –¥–æ—Å—Ç—É–ø –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞"
‚Ä¢ "–£ –Ω–∞—Å —É—á–∞—Ç—Å—è –º–∞—Å—Ç–µ—Ä–∞ —Å —Ä–∞–∑–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º, –Ω–∏–∫—Ç–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –æ—Å—É–∂–¥–∞–µ—Ç"
‚Ä¢ –ü—Ä–æ –¢–≤–æ—Ä—á–µ—Å–∫—É—é –¥–µ—Ä–µ–≤–Ω—é: "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ –æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ - –≤—Å—ë –ø—Ä–æ–¥—É–º–∞–Ω–æ, –º–Ω–æ–≥–∏–µ –ø—Ä–∏–µ–∑–∂–∞—é—Ç —Å–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏"

–≠–¢–ê–ü 5 - –ú–Ø–ì–ö–û–ï –ó–ê–ö–†–´–¢–ò–ï:
‚Ä¢ "–ú–æ–≥—É –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ, –∞ –≤—ã —Å–ø–æ–∫–æ–π–Ω–æ –ø–æ–¥—É–º–∞–µ—Ç–µ"
‚Ä¢ "–û—Å—Ç–∞–≤–ª—é —Å—Å—ã–ª–∫—É, –∏–∑—É—á–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è"
‚Ä¢ "–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã - —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏"
‚Ä¢ –ù–µ –ø–µ—Ä–µ—É–±–µ–∂–¥–∞–π, –µ—Å–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤—ã - –æ—Å—Ç–∞–≤—å –ø—É—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è

‚úÖ –§–†–ê–ó–´ –î–õ–Ø –í–ï–†–´:
‚Ä¢ "–ü–æ–Ω–∏–º–∞—é, —Å –æ–ø—ã—Ç–æ–º —Ö–æ—á–µ—Ç—Å—è –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–∏—á—å, –∞ –ø–æ–Ω–∏–º–∞—Ç—å —Å–∏—Å—Ç–µ–º—É"
‚Ä¢ "–î–∞, –ø–æ—Å–ª–µ —Å—Ç–æ–ª—å–∫–∏—Ö –ª–µ—Ç —Ä–∞–±–æ—Ç—ã –≤–∞–∂–Ω–æ –≤—ã–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å"
‚Ä¢ "–ú–Ω–æ–≥–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –≤–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è –≤—ã–±–∏—Ä–∞—é—Ç –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –∫—É—Ä—Å"
‚Ä¢ "–≠—Ç–æ –Ω–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ - —ç—Ç–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞–Ω–∏—è"
‚Ä¢ "–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞ –≤—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–Ω–∏–º–µ—Ç–µ —Ü–µ–Ω—ã - –∫–ª–∏–µ–Ω—Ç—ã —Å–∞–º–∏ —É–≤–∏–¥—è—Ç –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å"

–û –¢–≤–æ—Ä—á–µ—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ:
‚Ä¢ "–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ–±—É—á–µ–Ω–∏–µ, –∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ—Ç—Ä–∏—Ç"
‚Ä¢ "–í—ã —É–µ–∑–∂–∞–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ —Å —Ç–µ—Ö–Ω–∏–∫–∞–º–∏ - –≤—ã —É–µ–∑–∂–∞–µ—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º"
‚Ä¢ "–ï–ª–µ–Ω–∞ –ª–∏—á–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç —É—Ç—Ä–µ–Ω–Ω–∏–µ –±–µ—Å–µ–¥—ã - —ç—Ç–æ –ø—Ä–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å"

üìö –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–ï –ö–£–†–°–û–í:
‚Ä¢ –°—Ç—Ä–∏–∂–∫–∏ - "–°–∏—Å—Ç–µ–º–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤"
‚Ä¢ –ö–æ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞ - "–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –±—Ä–µ–Ω–¥–∞–º"
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏ - "–ù–æ–≤—ã–π –≤–∏—Ç–æ–∫ –≤ –ª—é–±–∏–º—ã—Ö —Ñ–æ—Ä–º–∞—Ö"
‚Ä¢ –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ - "–ü–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –æ–ø—ã—Ç –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –Ω–∞ –∑–Ω–∞–Ω–∏—è—Ö"
‚Ä¢ –û—Ñ–ª–∞–π–Ω –∫—É—Ä—Å—ã - "–ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –≤ –¢–≤–æ—Ä—á–µ—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ"

üéØ –ì–õ–ê–í–ù–û–ï:
‚Ä¢ –¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å –û–ü–´–¢–ù–´–ú –ú–ê–°–¢–ï–†–û–ú, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –ù–û–í–û–ì–û –í–ò–¢–ö–ê
‚Ä¢ –ü–∏—à–∏ –∂–∏–≤–æ, —Å —ç–º–æ—Ü–∏—è–º–∏, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
‚Ä¢ –ü—Ä–æ–¥–∞–≤–∞–π —á–µ—Ä–µ–∑ –ø–æ–º–æ—â—å, –∞ –Ω–µ –¥–∞–≤–ª–µ–Ω–∏–µ
‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∞—è –¥–µ—Ä–µ–≤–Ω—è - —ç—Ç–æ –û–ü–´–¢ –∏ –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ—Å—Ç–æ
‚Ä¢ –í—Å–µ–≥–¥–∞ —É—Ç–æ—á–Ω—è–π —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è (–æ—á–Ω—ã–π/–æ–Ω–ª–∞–π–Ω) - —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ!`;
  }

  private async searchRelevantCourses(
    interests: string[],
    budget: 'low' | 'medium' | 'high' | 'unknown',
    preferOnline: boolean
  ): Promise<ExternalCourse[]> {
    try {
      console.log('üîç –ü–æ–∏—Å–∫ –∫—É—Ä—Å–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
      console.log('   –ò–Ω—Ç–µ—Ä–µ—Å—ã:', interests);
      console.log('   –ë—é–¥–∂–µ—Ç:', budget);
      console.log('   –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –æ–Ω–ª–∞–π–Ω:', preferOnline);

      let courses: ExternalCourse[] = [];

      // –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤, –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫—É—Ä—Å—ã
      if (interests.length === 0) {
        console.log('üìö –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫—É—Ä—Å—ã (–∏–Ω—Ç–µ—Ä–µ—Å—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã)');
        courses = await coursesDB.getAllCourses();
      } else {
        // –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
        for (const interest of interests) {
          console.log(`   üîé –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É: "${interest}"`);
          const searchResults = await coursesDB.searchCourses(interest);
          console.log(`      –ù–∞–π–¥–µ–Ω–æ: ${searchResults.length} –∫—É—Ä—Å–æ–≤`);
          courses = [...courses, ...searchResults];
        }
      }

      // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º, –±–µ—Ä–µ–º –≤—Å–µ –∫—É—Ä—Å—ã
      if (courses.length === 0) {
        console.log('‚ö†Ô∏è  –ü–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫—É—Ä—Å—ã');
        courses = await coursesDB.getAllCourses();
      }

      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –æ–±—É—á–µ–Ω–∏—è
      if (courses.length > 0) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —è–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç –≤ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö
        const wantsOffline = interests.some(i => i.includes('–æ—á–Ω') || i.includes('–æ—Ñ–ª–∞–π–Ω') || i.includes('–æ—Ñ—Ñ–ª–∞–π–Ω'));
        const wantsOnline = interests.some(i => i.includes('–æ–Ω–ª–∞–π–Ω'));

        if (wantsOffline || (!preferOnline && !wantsOnline)) {
          // –§–∏–ª—å—Ç—Ä—É–µ–º –¢–û–õ–¨–ö–û –æ—Ñ–ª–∞–π–Ω –∫—É—Ä—Å—ã (–ù–ï –≥–∏–±—Ä–∏–¥–Ω—ã–µ)
          const offlineCourses = courses.filter(c =>
            c.format && c.format.toLowerCase() === '–æ—Ñ–ª–∞–π–Ω'
          );
          if (offlineCourses.length > 0) {
            courses = offlineCourses;
            console.log(`üè¢ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –æ—Ñ–ª–∞–π–Ω –∫—É—Ä—Å–æ–≤: ${courses.length}`);
          }
        } else if (preferOnline || wantsOnline) {
          // –§–∏–ª—å—Ç—Ä—É–µ–º –¢–û–õ–¨–ö–û –æ–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã (–ù–ï –≥–∏–±—Ä–∏–¥–Ω—ã–µ)
          const onlineCourses = courses.filter(c =>
            c.format && c.format.toLowerCase() === '–æ–Ω–ª–∞–π–Ω'
          );
          if (onlineCourses.length > 0) {
            courses = onlineCourses;
            console.log(`üíª –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –æ–Ω–ª–∞–π–Ω –∫—É—Ä—Å–æ–≤: ${courses.length}`);
          }
        }
      }

      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±—é–¥–∂–µ—Ç—É
      if (budget !== 'unknown' && courses.length > 0) {
        let maxPrice = 1000000; // –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        if (budget === 'low') maxPrice = 30000;
        else if (budget === 'medium') maxPrice = 70000;

        const budgetCourses = courses.filter(c => !c.price || c.price <= maxPrice);
        if (budgetCourses.length > 0) {
          courses = budgetCourses;
          console.log(`üí∞ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø–æ –±—é–¥–∂–µ—Ç—É (–¥–æ ${maxPrice}‚ÇΩ): ${courses.length}`);
        }
      }

      // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
      const uniqueCourses = courses.filter((course, index, self) =>
        index === self.findIndex((c) => c.id === course.id)
      );

      console.log(`‚úÖ –ò—Ç–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤: ${uniqueCourses.length}`);

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ø 5-6 –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
      return uniqueCourses.slice(0, 6);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤:', error);
      return [];
    }
  }

  private analyzeClientNeeds(messages: Message[]): {
    level: 'beginner' | 'intermediate' | 'advanced' | 'unknown';
    interests: string[];
    budget: 'low' | 'medium' | 'high' | 'unknown';
    preferOnline: boolean;
  } {
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π
    const recentMessages = messages.slice(-3);
    const recentConversation = recentMessages.map(m => m.content).join(' ').toLowerCase();

    // –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
    const fullConversation = messages.map(m => m.content).join(' ').toLowerCase();

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∏–∑ –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏
    let level: 'beginner' | 'intermediate' | 'advanced' | 'unknown' = 'unknown';
    if (fullConversation.includes('–Ω–∞—á–∏–Ω–∞—é—â') || fullConversation.includes('—Å –Ω—É–ª—è') || fullConversation.includes('–Ω–æ–≤–∏—á–æ–∫')) {
      level = 'beginner';
    } else if (fullConversation.includes('–æ–ø—ã—Ç') || fullConversation.includes('—Ä–∞–±–æ—Ç–∞—é') || fullConversation.includes('–ø—Ä–∞–∫—Ç–∏–∫—É')) {
      level = 'intermediate';
    } else if (fullConversation.includes('–ø—Ä–µ–ø–æ–¥–∞–≤–∞') || fullConversation.includes('–Ω–∞—Å—Ç–∞–≤–Ω–∏') || fullConversation.includes('—ç–∫—Å–ø–µ—Ä—Ç')) {
      level = 'advanced';
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏
    const interests: string[] = [];

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è
    if (recentConversation.includes('–æ—á–Ω') || recentConversation.includes('–æ—Ñ–ª–∞–π–Ω') || recentConversation.includes('–æ—Ñ—Ñ–ª–∞–π–Ω')) {
      interests.push('–æ—á–Ω—ã–π', '–æ—Ñ–ª–∞–π–Ω');
    }
    if (recentConversation.includes('–æ–Ω–ª–∞–π–Ω')) {
      interests.push('–æ–Ω–ª–∞–π–Ω');
    }

    // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–º–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏
    if (recentConversation.includes('—Å—Ç—Ä–∏–∂') || recentConversation.includes('–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')) {
      interests.push('—Å—Ç—Ä–∏–∂–∫', '–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä');
    }
    if (recentConversation.includes('–æ–∫—Ä–∞—à') || recentConversation.includes('–∫–æ–ª–æ—Ä') || recentConversation.includes('–±–ª–æ–Ω–¥') ||
        recentConversation.includes('—Ü–≤–µ—Ç') || recentConversation.includes('–∫—Ä–∞—Å–∫')) {
      interests.push('–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ', '–∫–æ–ª–æ—Ä–∏—Å—Ç', '–±–ª–æ–Ω–¥', '–¥–Ω–∫', '—Ü–≤–µ—Ç', '—Ñ–∞–∫—É–ª—å—Ç–µ—Ç');
    }
    if (recentConversation.includes('—Å–∞–ª–æ–Ω') || recentConversation.includes('–±–∏–∑–Ω–µ—Å') || recentConversation.includes('—É–ø—Ä–∞–≤–ª–µ–Ω')) {
      interests.push('—Å–∞–ª–æ–Ω', '–±–∏–∑–Ω–µ—Å', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å');
    }
    if (recentConversation.includes('–ø–µ—Ä–º–∞–Ω–µ–Ω—Ç') || recentConversation.includes('—Ç–∞—Ç—É–∞–∂')) {
      interests.push('–ø–µ—Ä–º–∞–Ω–µ–Ω—Ç', '—Ç–∞—Ç—É–∞–∂');
    }
    // –£–±—Ä–∞–Ω—ã –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫—É—Ä—Å—ã (–≤–∏–∑–∞–∂, –±—Ä–æ–≤–∏, —Ä–µ—Å–Ω–∏—Ü—ã, —Å–ø–∞)

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –æ–±—É—á–µ–Ω–∏—è
    let preferOnline = false;

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –æ—Ñ–ª–∞–π–Ω/–æ—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    if (recentConversation.includes('–æ—á–Ω') || recentConversation.includes('–æ—Ñ–ª–∞–π–Ω') || recentConversation.includes('–æ—Ñ—Ñ–ª–∞–π–Ω') || recentConversation.includes('–ª–∏—á–Ω')) {
      preferOnline = false;
    }
    // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –æ–Ω–ª–∞–π–Ω —Ñ–æ—Ä–º–∞—Ç
    else if (recentConversation.includes('–æ–Ω–ª–∞–π–Ω') || recentConversation.includes('–¥–∏—Å—Ç–∞–Ω—Ü') || recentConversation.includes('—É–¥–∞–ª–µ–Ω')) {
      preferOnline = true;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±—é–¥–∂–µ—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    let budget: 'low' | 'medium' | 'high' | 'unknown' = 'unknown';
    if (recentConversation.includes('–¥–µ—à–µ–≤') || recentConversation.includes('—ç–∫–æ–Ω–æ–º') || recentConversation.includes('–Ω–µ–¥–æ—Ä–æ–≥') || recentConversation.includes('–±—é–¥–∂–µ—Ç')) {
      budget = 'low';
    } else if (recentConversation.includes('–ø—Ä–µ–º–∏—É–º') || recentConversation.includes('vip') || recentConversation.includes('–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª')) {
      budget = 'high';
    }

    return { level, interests, budget, preferOnline };
  }

  private getDaysWord(days: number): string {
    const lastDigit = days % 10;
    const lastTwoDigits = days % 100;

    if (lastTwoDigits >= 11 && lastTwoDigits <= 14) {
      return '–¥–Ω–µ–π';
    }

    if (lastDigit === 1) {
      return '–¥–µ–Ω—å';
    } else if (lastDigit >= 2 && lastDigit <= 4) {
      return '–¥–Ω—è';
    } else {
      return '–¥–Ω–µ–π';
    }
  }

  async generateResponse(
    conversation: Conversation,
    newMessage: string,
    telegramClient?: TelegramClient
  ): Promise<{
    response: string;
    suggestedProducts: string[];
    shouldScheduleFollowUp: boolean;
    clientStatus: Conversation['clientStatus'];
  }> {
    try {
      console.log('ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ AI (–í–µ—Ä–∞)...');
      console.log(`üì® –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: "${newMessage}"`);

      // –ü–†–ò–û–†–ò–¢–ï–¢ 0: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É
      const escalationCheck = checkIfNeedsManager(newMessage);
      if (escalationCheck.needsManager && telegramClient) {
        console.log(`üö® –¢—Ä–µ–±—É–µ—Ç—Å—è —ç—Å–∫–∞–ª–∞—Ü–∏—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É: ${escalationCheck.reason}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–∞–≤–Ω–æ —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω
        if (wasClientRecentlyEscalated(conversation.userId)) {
          console.log('‚è∞ –ö–ª–∏–µ–Ω—Ç –±—ã–ª –Ω–µ–¥–∞–≤–Ω–æ —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é —ç—Å–∫–∞–ª–∞—Ü–∏—é');
        } else {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
          const priority = getEscalationPriority(escalationCheck.category);
          await sendManagerNotificationDirect(telegramClient, {
            clientName: conversation.userName,
            clientId: conversation.userId,
            clientUsername: conversation.userUsername,
            clientMessage: newMessage,
            reason: escalationCheck.reason,
            category: escalationCheck.category,
            priority: priority
          });
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        let response = getClientEscalationResponse(escalationCheck.category);

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ—Ä–∞–±–æ—á–µ–º –≤—Ä–µ–º–µ–Ω–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        if (!isWorkingHours()) {
          response += getNonWorkingHoursMessage();
        }

        return {
          response: response,
          suggestedProducts: [],
          shouldScheduleFollowUp: false,
          clientStatus: escalationCheck.category === 'order' ? 'negotiating' : 'interested'
        };
      }

      // –ü–†–ò–û–†–ò–¢–ï–¢ 1: –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫—É—Ä—Å–∞ –î–ù–ö –¶–í–ï–¢–ê
      if (isDNACourseRequest(newMessage)) {
        console.log('üé® –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –∫—É—Ä—Å–∞ –î–ù–ö –¶–í–ï–¢–ê');
        return {
          response: DNA_COURSE_PRESENTATION,
          suggestedProducts: [],
          shouldScheduleFollowUp: true,
          clientStatus: 'interested'
        };
      }

      // –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ó–∞–ø—Ä–æ—Å –¥–∞—Ç –∫—É—Ä—Å–æ–≤
      if (isAskingForDates(newMessage)) {
        console.log('üìÖ –ó–∞–ø—Ä–æ—Å –æ –¥–∞—Ç–∞—Ö –∫—É—Ä—Å–æ–≤');
        const lastMessages = conversation.messages.slice(-5);
        let courseName = '';

        for (const msg of lastMessages) {
          const content = msg.content.toLowerCase();
          if (content.includes('–¥–Ω–∫ —Ü–≤–µ—Ç')) {
            courseName = '–î–ù–ö —Ü–≤–µ—Ç–∞';
            break;
          }
        }

        const dates = courseName ? getCourseDates(courseName) : getCourseDates('');
        return {
          response: dates,
          suggestedProducts: [],
          shouldScheduleFollowUp: true,
          clientStatus: 'interested'
        };
      }

      // –ü–†–ò–û–†–ò–¢–ï–¢ 3: –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫—É—Ä—Å–µ
      // –í–ê–ñ–ù–û: –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —ç—Ç–æ –ù–ï –æ–±—â–∏–π –∑–∞–ø—Ä–æ—Å
      if (!isGeneralRequest(newMessage) && isAskingForDetails(newMessage)) {
        console.log('üìñ –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ');
        const detailedPresentation = getDetailedCoursePresentation(newMessage);
        if (detailedPresentation) {
          return {
            response: detailedPresentation,
            suggestedProducts: [],
            shouldScheduleFollowUp: true,
            clientStatus: 'interested'
          };
        }
      }

      // –ü–†–ò–û–†–ò–¢–ï–¢ 4: –û–±—â–∏–π –∑–∞–ø—Ä–æ—Å –æ –∫—É—Ä—Å–∞—Ö - –Ω–∞—á–∏–Ω–∞–µ–º –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é
      if (isGeneralRequest(newMessage)) {
        console.log('üìä –û–±—â–∏–π –∑–∞–ø—Ä–æ—Å - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é');

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á—Ç–æ —É–∂–µ –∑–Ω–∞–µ–º –æ –∫–ª–∏–µ–Ω—Ç–µ
        const allMessages = conversation.messages.map(m => m.content);
        allMessages.push(newMessage);
        const qualification = analyzeQualification(allMessages);

        // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
        if (!qualification.qualified) {
          const questions = getQualificationQuestions(qualification);
          if (questions) {
            console.log('‚ùì –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏');
            return {
              response: questions,
              suggestedProducts: [],
              shouldScheduleFollowUp: false,
              clientStatus: 'new'
            };
          }
        }

        // –ï—Å–ª–∏ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫
        console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø–æ–¥–±–∏—Ä–∞–µ–º –∫—É—Ä—Å—ã');

        // –ü–æ–¥–±–∏—Ä–∞–µ–º –∫—É—Ä—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
        let suggestedCourses = [];

        if (qualification.format === 'offline') {
          suggestedCourses = await coursesDB.getCoursesByFormat('–æ—Ñ–ª–∞–π–Ω');
        } else if (qualification.format === 'online') {
          suggestedCourses = await coursesDB.getCoursesByFormat('–æ–Ω–ª–∞–π–Ω');
        } else {
          suggestedCourses = await coursesDB.getAllCourses();
        }

        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é
        if (qualification.direction === 'haircuts') {
          suggestedCourses = suggestedCourses.filter(c =>
            c.name.toLowerCase().includes('—Å—Ç—Ä–∏–∂–∫'));
        } else if (qualification.direction === 'coloring') {
          suggestedCourses = suggestedCourses.filter(c =>
            c.name.toLowerCase().includes('–∫–æ–ª–æ—Ä') ||
            c.name.toLowerCase().includes('–¥–Ω–∫') ||
            c.name.toLowerCase().includes('—Ü–≤–µ—Ç') ||
            c.name.toLowerCase().includes('–±–ª–æ–Ω–¥'));
        } else if (qualification.direction === 'business') {
          suggestedCourses = suggestedCourses.filter(c =>
            c.name.toLowerCase().includes('—Å–∞–ª–æ–Ω') ||
            c.name.toLowerCase().includes('–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω') ||
            c.name.toLowerCase().includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª'));
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—Ä–∞—Ç–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        const shortPresentation = getShortCoursePresentation(suggestedCourses, qualification);
        return {
          response: shortPresentation,
          suggestedProducts: suggestedCourses.slice(0, 3).map(c => c.id),
          shouldScheduleFollowUp: false,
          clientStatus: 'interested'
        };
      }

      // –ü–†–ò–û–†–ò–¢–ï–¢ 5: FAQ –æ –¢–≤–æ—Ä—á–µ—Å–∫–æ–π –¥–µ—Ä–µ–≤–Ω–µ
      const faqAnswer = findFAQAnswer(newMessage);
      if (faqAnswer) {
        console.log('üìö –ù–∞–π–¥–µ–Ω –æ—Ç–≤–µ—Ç –≤ FAQ');
        return {
          response: faqAnswer,
          suggestedProducts: [],
          shouldScheduleFollowUp: false,
          clientStatus: 'interested'
        };
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è
      const objectionResponse = findObjectionResponse(newMessage);
      if (objectionResponse) {
        console.log('üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è');
        return {
          response: objectionResponse,
          suggestedProducts: [],
          shouldScheduleFollowUp: true,
          clientStatus: 'negotiating'
        };
      }

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
      const analysis = this.analyzeClientNeeds([...conversation.messages, { role: 'user', content: newMessage } as Message]);

      // –ü–æ–¥–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      let suggestedCourses: ExternalCourse[] = [];

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
      const lowerMessage = newMessage.toLowerCase();

      if (lowerMessage.includes('–≤—Å–µ –æ—á–Ω—ã–µ') || lowerMessage.includes('–≤—Å–µ –æ—Ñ–ª–∞–π–Ω') ||
          (lowerMessage.includes('–æ—á–Ω') && lowerMessage.includes('–∫—É—Ä—Å')) ||
          (lowerMessage.includes('–æ—Ñ–ª–∞–π–Ω') && lowerMessage.includes('–∫—É—Ä—Å')) ||
          lowerMessage.includes('–≥–∏–±—Ä–∏–¥')) {
        console.log('üìç –ó–∞–ø—Ä–æ—Å –æ—Ñ–ª–∞–π–Ω –∫—É—Ä—Å–æ–≤');
        suggestedCourses = await coursesDB.getCoursesByFormat('–æ—Ñ–ª–∞–π–Ω');
        console.log(`üè¢ –ù–∞–π–¥–µ–Ω–æ –æ—Ñ–ª–∞–π–Ω –∫—É—Ä—Å–æ–≤: ${suggestedCourses.length}`);
      } else if (lowerMessage.includes('–≤—Å–µ –æ–Ω–ª–∞–π–Ω') || (lowerMessage.includes('–æ–Ω–ª–∞–π–Ω') && lowerMessage.includes('–∫—É—Ä—Å'))) {
        console.log('üíª –ó–∞–ø—Ä–æ—Å –æ–Ω–ª–∞–π–Ω –∫—É—Ä—Å–æ–≤');
        suggestedCourses = await coursesDB.getCoursesByFormat('–æ–Ω–ª–∞–π–Ω');
      } else if (lowerMessage.includes('–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫') || lowerMessage.includes('—Ç—Ä–µ–Ω–µ—Ä') || lowerMessage.includes('–ø—Ä–µ–ø–æ–¥–∞–≤–∞')) {
        console.log('üë®‚Äçüè´ –ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–æ–≤ –¥–ª—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤');
        const results = await coursesDB.searchCourses('–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫');
        const trainer = await coursesDB.searchCourses('—Ç—Ä–µ–Ω–µ—Ä');
        const teacher = await coursesDB.searchCourses('–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å');
        suggestedCourses = [...results, ...trainer, ...teacher];
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        suggestedCourses = suggestedCourses.filter((course, index, self) =>
          index === self.findIndex((c) => c.id === course.id)
        );
      } else if (lowerMessage.includes('–æ–∫—Ä–∞—à') || lowerMessage.includes('–∫–æ–ª–æ—Ä') || lowerMessage.includes('–∫–æ–ª–æ—Ä–∏—Å—Ç') || lowerMessage.includes('—Ü–≤–µ—Ç') || lowerMessage.includes('–±–ª–æ–Ω–¥')) {
        console.log('üé® –ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–æ–≤ –ø–æ –∫–æ–ª–æ—Ä–∏—Å—Ç–∏–∫–µ/–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—é');
        const colorCourses = await coursesDB.searchCourses('–∫–æ–ª–æ—Ä');
        const coloristCourses = await coursesDB.searchCourses('–∫–æ–ª–æ—Ä–∏—Å—Ç');
        const dnaCourses = await coursesDB.searchCourses('–¥–Ω–∫');
        const colorCourses2 = await coursesDB.searchCourses('—Ü–≤–µ—Ç');
        const blondCourses = await coursesDB.searchCourses('–±–ª–æ–Ω–¥');
        const facultyCourses = await coursesDB.searchCourses('—Ñ–∞–∫—É–ª—å—Ç–µ—Ç');

        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã
        suggestedCourses = [...colorCourses, ...coloristCourses, ...dnaCourses, ...colorCourses2, ...blondCourses, ...facultyCourses];

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫—É—Ä—Å—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—é
        const allCourses = await coursesDB.getAllCourses();
        const additionalCourses = allCourses.filter(course =>
          course.name.toLowerCase().includes('–∫–æ–ª–æ—Ä') ||
          course.name.toLowerCase().includes('—Ü–≤–µ—Ç') ||
          course.name.toLowerCase().includes('–æ–∫—Ä–∞—à') ||
          course.name.toLowerCase().includes('–±–ª–æ–Ω–¥') ||
          course.description.toLowerCase().includes('–æ–∫—Ä–∞—à') ||
          course.description.toLowerCase().includes('–∫–æ–ª–æ—Ä')
        );

        suggestedCourses = [...suggestedCourses, ...additionalCourses];

        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        suggestedCourses = suggestedCourses.filter((course, index, self) =>
          index === self.findIndex((c) => c.id === course.id)
        );
      } else if (lowerMessage.includes('–Ω–µ–¥–æ—Ä–æ–≥') || lowerMessage.includes('–¥–µ—à–µ–≤') || lowerMessage.includes('–±—é–¥–∂–µ—Ç')) {
        console.log('üí∞ –ó–∞–ø—Ä–æ—Å –Ω–µ–¥–æ—Ä–æ–≥–∏—Ö –∫—É—Ä—Å–æ–≤');
        const allCourses = await coursesDB.getAllCourses();
        suggestedCourses = allCourses
          .filter(c => c.price && c.price <= 10000)
          .sort((a, b) => (a.price || 0) - (b.price || 0));
      } else if (lowerMessage.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª') || lowerMessage.includes('—É–ø—Ä–∞–≤–ª–µ–Ω')) {
        console.log('üëî –ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–æ–≤ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π');
        const managers = await coursesDB.searchCourses('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª');
        const planning = await coursesDB.searchCourses('–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ');
        const masterGroup = await coursesDB.searchCourses('–º–∞—Å—Ç–µ—Ä-–≥—Ä—É–ø–ø–∞');
        suggestedCourses = [...managers, ...planning, ...masterGroup];
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        suggestedCourses = suggestedCourses.filter((course, index, self) =>
          index === self.findIndex((c) => c.id === course.id)
        );
      } else if (lowerMessage.includes('—Ñ–∞–∫—É–ª—å—Ç–µ—Ç')) {
        console.log('üéì –ó–∞–ø—Ä–æ—Å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤');
        suggestedCourses = await coursesDB.searchCourses('—Ñ–∞–∫—É–ª—å—Ç–µ—Ç');
      } else if (analysis.interests.length > 0) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        suggestedCourses = await this.searchRelevantCourses(
          analysis.interests,
          analysis.budget,
          analysis.preferOnline
        );
      } else {
        // –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫—É—Ä—Å—ã
        const allCourses = await coursesDB.getAllCourses();
        suggestedCourses = allCourses.slice(0, 3);
      }

      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫—É—Ä—Å–∞ –î–ù–ö –¶–í–ï–¢–ê
      if (isDNACourseRequest(newMessage)) {
        console.log('üé® –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –∫—É—Ä—Å–∞ –î–ù–ö –¶–í–ï–¢–ê');
        return {
          response: DNA_COURSE_PRESENTATION,
          suggestedProducts: [],
          shouldScheduleFollowUp: true,
          clientStatus: 'interested'
        };
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –æ –¥–∞—Ç–∞—Ö –∫—É—Ä—Å–æ–≤
      if (isAskingForDates(newMessage)) {
        console.log('üìÖ –ó–∞–ø—Ä–æ—Å –æ –¥–∞—Ç–∞—Ö –∫—É—Ä—Å–æ–≤');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ - –æ –∫–∞–∫–æ–º –∫—É—Ä—Å–µ –≥–æ–≤–æ—Ä–∏–ª–∏
        const lastMessages = conversation.messages.slice(-5);
        let courseName = '';

        // –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
        for (const msg of lastMessages) {
          const content = msg.content.toLowerCase();
          if (content.includes('–¥–Ω–∫ —Ü–≤–µ—Ç')) {
            courseName = '–î–ù–ö —Ü–≤–µ—Ç–∞';
            break;
          } else if (content.includes('–∫–æ–ª–æ—Ä–∏—Å—Ç')) {
            courseName = '–î–ù–ö –¶–í–ï–¢–ê';
            break;
          } else if (content.includes('–∫–æ—Ä–æ—Ç–∫') && content.includes('—Å—Ç—Ä–∏–∂–∫')) {
            courseName = '–ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏';
            break;
          } else if (content.includes('—Å—Ç—Ä–∏–∂–∫') && content.includes('—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç')) {
            courseName = '–°—Ç—Ä–∏–∂–∫–∏ –§—É–Ω–¥–∞–º–µ–Ω—Ç';
            break;
          }
        }

        // –ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏–ª–∏ –ø—Ä–æ –æ—á–Ω—ã–µ –∫—É—Ä—Å—ã –∏–ª–∏ –¢–≤–æ—Ä—á–µ—Å–∫—É—é –¥–µ—Ä–µ–≤–Ω—é
        if (newMessage.toLowerCase().includes('–æ—á–Ω') ||
            newMessage.toLowerCase().includes('–æ—Ñ–ª–∞–π–Ω') ||
            lastMessages.some(m => m.content.toLowerCase().includes('—Ç–≤–æ—Ä—á–µ—Å–∫') ||
                                   m.content.toLowerCase().includes('–¥–µ—Ä–µ–≤–Ω'))) {
          return {
            response: getOfflineCoursesWithDates(),
            suggestedProducts: [],
            shouldScheduleFollowUp: true,
            clientStatus: 'interested'
          };
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –∏–ª–∏ –æ–±—â–∏–µ –¥–∞—Ç—ã
        const dates = courseName ? getCourseDates(courseName) : getCourseDates('');
        return {
          response: dates,
          suggestedProducts: [],
          shouldScheduleFollowUp: true,
          clientStatus: 'interested'
        };
      }

      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ä—Å–æ–≤ –¥–ª—è AI
      let productsContext = '';

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 2-3 –∫—É—Ä—Å–∞ –¥–ª—è –í–µ—Ä—ã (–Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞)
      const maxCourses = 3;

      if (suggestedCourses.length > 0) {
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É—Ä—Å–æ–≤
        const coursesToShow = suggestedCourses.slice(0, maxCourses);

        console.log(`üìö –ü–æ–¥–æ–±—Ä–∞–Ω–æ ${suggestedCourses.length} –∫—É—Ä—Å–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ${coursesToShow.length}:`);
        coursesToShow.forEach(course => {
          console.log(`   - ${course.title} (${course.price ? course.price + ' —Ä—É–±.' : '—Ü–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'})`);
        });

        productsContext = '\n\nüìö –ò–î–ï–ê–õ–¨–ù–´–ï –ö–£–†–°–´ –î–õ–Ø –ö–õ–ò–ï–ù–¢–ê:\n\n';
        coursesToShow.forEach((course, index) => {
          productsContext += `${index + 1}. ${coursesDB.formatCourseInfo(course)}\n`;
          productsContext += `---\n\n`;
        });

        if (suggestedCourses.length > coursesToShow.length) {
          productsContext += `\nüìå –ï—Å—Ç—å –µ—â—ë ${suggestedCourses.length - coursesToShow.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫—É—Ä—Å–æ–≤, –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n`;
        }
      } else {
        console.log('‚ö†Ô∏è  –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
        // –ï—Å–ª–∏ –∫—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        const categories = await coursesDB.getCategories();
        productsContext = '\n\nüìã –î–û–°–¢–£–ü–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ö–£–†–°–û–í:\n';
        categories.forEach(cat => {
          productsContext += `‚Ä¢ ${cat}\n`;
        });
        productsContext += '\n‚ùì –ö–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—É—Ä—Å–∞—Ö.';
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è API
      const messages: OpenAIMessage[] = [
        { role: 'system', content: await this.buildSystemPrompt() + productsContext },
        ...conversation.messages.slice(-10).map(msg => ({
          role: msg.role as 'user' | 'assistant',
          content: msg.content
        })),
        { role: 'user', content: newMessage }
      ];

      console.log(`üìù –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI API (–º–æ–¥–µ–ª—å: ${this.model})...`);

      // –í—ã–∑—ã–≤–∞–µ–º API
      const response = await axios.post<OpenAIResponse>(
        this.apiUrl,
        {
          model: this.model,
          messages,
          temperature: 0.8, // –ß—É—Ç—å –≤—ã—à–µ –¥–ª—è –±–æ–ª–µ–µ —á–µ–ª–æ–≤–µ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
          max_tokens: 800
        },
        this.axiosConfig
      );

      console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç AI –ø–æ–ª—É—á–µ–Ω');
      const aiResponse = response.data.choices[0].message.content;

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∏–∞–ª–æ–≥–∞ (–±–æ–ª–µ–µ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ)
      let clientStatus: Conversation['clientStatus'] = 'new';
      const allMessages = [...conversation.messages, { role: 'user', content: newMessage }];

      if (allMessages.length > 2) {
        const recentMessages = allMessages.slice(-5).map(m => m.content).join(' ').toLowerCase();

        if (recentMessages.includes('–∫—É–ø–∏—Ç—å') || recentMessages.includes('–æ–ø–ª–∞—Ç') || recentMessages.includes('–∑–∞–ø–∏—Å–∞—Ç—å')) {
          clientStatus = 'purchased';
        } else if (recentMessages.includes('–∏–Ω—Ç–µ—Ä–µ—Å') || recentMessages.includes('—Ä–∞—Å—Å–∫–∞–∂') || recentMessages.includes('–ø–æ–¥—Ä–æ–±–Ω')) {
          clientStatus = 'interested';
        } else if (recentMessages.includes('–ø–æ–¥—É–º–∞') || recentMessages.includes('–ø–æ—Å–æ–≤–µ—Ç—É—é—Å—å')) {
          clientStatus = 'negotiating';
        } else if (recentMessages.includes('–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ') || recentMessages.includes('–Ω–µ –Ω–∞–¥–æ') || recentMessages.includes('—Å–ø–∞—Å–∏–±–æ, –Ω–µ—Ç')) {
          clientStatus = 'lost';
        }
      }

      // –ü–ª–∞–Ω–∏—Ä—É–µ–º follow-up —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω
      const shouldScheduleFollowUp = clientStatus === 'interested' || clientStatus === 'negotiating';

      return {
        response: aiResponse,
        suggestedProducts: suggestedCourses.map(c => c.id),
        shouldScheduleFollowUp,
        clientStatus
      };

    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞:', error.message);

      if (error.response) {
        console.error('üìã –°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏:', error.response.status);
        console.error('üìã –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', JSON.stringify(error.response.data, null, 2));

        if (error.response.status === 404) {
          console.error('‚ö†Ô∏è  –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏.');
        } else if (error.response.status === 401) {
          console.error('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á.');
        } else if (error.response.status === 429) {
          console.error('‚ö†Ô∏è  –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤.');
        }
      }

      // Fallback –æ—Ç–≤–µ—Ç - —Ç–æ–∂–µ —á–µ–ª–æ–≤–µ—á–Ω—ã–π
      return {
        response: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–µ—Ä–∞, —è –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∞–∫–∞–¥–µ–º–∏–∏ SOINTERA.\n\n–†–∞–¥–∞ –ø–æ–º–æ—á—å –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –æ–±—É—á–µ–Ω–∏—è! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n\n–£ –Ω–∞—Å –µ—Å—Ç—å –∫—É—Ä—Å—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:\n‚Ä¢ –°—Ç—Ä–∏–∂–∫–∏ –∏ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ\n‚Ä¢ –ö–æ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞ –∏ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–ª–æ–Ω–æ–º –∏ –±–∏–∑–Ω–µ—Å\n‚Ä¢ –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ\n\n–ù–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ –≤—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏?',
        suggestedProducts: [],
        shouldScheduleFollowUp: false,
        clientStatus: 'new'
      };
    }
  }

  async generateFollowUpMessage(conversation: Conversation): Promise<string> {
    try {
      const daysSinceLastMessage = Math.floor(
        (Date.now() - conversation.lastMessageAt.getTime()) / (1000 * 60 * 60 * 24)
      );

      const systemPrompt = `–¢—ã - –í–µ—Ä–∞, –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ö–ª–∏–µ–Ω—Ç ${conversation.userName} –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª ${daysSinceLastMessage} ${this.getDaysWord(daysSinceLastMessage)}.

–ù–∞–ø–∏—à–∏ –î–ï–õ–ò–ö–ê–¢–ù–û–ï follow-up —Å–æ–æ–±—â–µ–Ω–∏–µ:
‚Ä¢ –ù–∞–ø–æ–º–Ω–∏ –æ —Å–µ–±–µ –º—è–≥–∫–æ
‚Ä¢ –£—Ç–æ—á–Ω–∏, –∞–∫—Ç—É–∞–ª–µ–Ω –ª–∏ –µ—â–µ –≤–æ–ø—Ä–æ—Å –æ–±—É—á–µ–Ω–∏—è
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–º–æ—â—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
‚Ä¢ –ù–ï –¥–∞–≤–∏, –Ω–µ –º–∞–Ω–∏–ø—É–ª–∏—Ä—É–π
‚Ä¢ –ë—É–¥—å –≥–æ—Ç–æ–≤–∞ –æ—Ç–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞

–°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞: ${conversation.clientStatus}`;

      const messages: OpenAIMessage[] = [
        { role: 'system', content: systemPrompt },
        ...conversation.messages.slice(-5).map(msg => ({
          role: msg.role as 'user' | 'assistant',
          content: msg.content
        })),
        {
          role: 'user',
          content: '–ù–∞–ø–∏—à–∏ –≤–µ–∂–ª–∏–≤–æ–µ, –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ follow-up —Å–æ–æ–±—â–µ–Ω–∏–µ'
        }
      ];

      const response = await axios.post<OpenAIResponse>(
        this.apiUrl,
        {
          model: this.model,
          messages,
          temperature: 0.8,
          max_tokens: 300
        },
        this.axiosConfig
      );

      return response.data.choices[0].message.content;

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ follow-up —Å–æ–æ–±—â–µ–Ω–∏—è:', error);

      // –î–µ–ª–∏–∫–∞—Ç–Ω—ã–µ fallback follow-up
      const followUpTemplates = [
        `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${conversation.userName}!\n\n–≠—Ç–æ –í–µ—Ä–∞ –∏–∑ –∞–∫–∞–¥–µ–º–∏–∏ SOINTERA. –ú—ã —Å –≤–∞–º–∏ –æ–±—Å—É–∂–¥–∞–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥.\n\n–•–æ—Ç–µ–ª–∞ —É—Ç–æ—á–Ω–∏—Ç—å - –∞–∫—Ç—É–∞–ª–µ–Ω –ª–∏ –µ—â–µ –¥–ª—è –≤–∞—Å –≤–æ–ø—Ä–æ—Å –æ–±—É—á–µ–Ω–∏—è? –ï—Å–ª–∏ –¥–∞, –±—É–¥—É —Ä–∞–¥–∞ –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n\n–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ - —Ç–æ–∂–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –ü—Ä–æ—Å—Ç–æ –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å, —á—Ç–æ–±—ã —è –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏–ª–∞.\n\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!`,

        `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${conversation.userName}!\n\n–ù–∞–¥–µ—é—Å—å, —É –≤–∞—Å –≤—Å—ë —Ö–æ—Ä–æ—à–æ! –í—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º–∏ –∫—É—Ä—Å–∞–º–∏, –∏ —è –ø–æ–¥—É–º–∞–ª–∞ - –≤–¥—Ä—É–≥ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥–ª–∞ –±—ã –ø—Ä–æ—è—Å–Ω–∏—Ç—å?\n\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–ª–∏ –ø–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º - —è –Ω–∞ —Å–≤—è–∑–∏.\n\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –í–µ—Ä–∞`,

        `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${conversation.userName}!\n\n–ü–æ–º–Ω—é, —á—Ç–æ –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –≤ –Ω–∞—à–µ–π –∞–∫–∞–¥–µ–º–∏–∏. –ö–∞–∫ –≤–∞—à–∏ –ø–ª–∞–Ω—ã - –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º?\n\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏–ª–∏ –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å, –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è.\n\n–ë—É–¥—É —Ä–∞–¥–∞ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ–π!`
      ];

      return followUpTemplates[Math.floor(Math.random() * followUpTemplates.length)];
    }
  }

  async analyzeConversationForInsights(conversation: Conversation): Promise<{
    summary: string;
    recommendations: string[];
    nextSteps: string[];
  }> {
    try {
      const messages: OpenAIMessage[] = [
        {
          role: 'system',
          content: `–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–∞–ª–æ–≥ –∏ –¥–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.

          –§–æ–∫—É—Å –Ω–∞:
          1. –ß—Ç–æ —É–∑–Ω–∞–ª–∏ –æ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è—Ö –∫–ª–∏–µ–Ω—Ç–∞
          2. –ö–∞–∫–∏–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è –±—ã–ª–∏ –∏ –∫–∞–∫ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏
          3. –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
          4. –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –ø–æ–º–æ—â–∏ –∫–ª–∏–µ–Ω—Ç—É

          –ë—É–¥—å –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.`
        },
        ...conversation.messages.map(msg => ({
          role: msg.role as 'user' | 'assistant',
          content: msg.content
        })),
        { role: 'user', content: '–î–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏' }
      ];

      const response = await axios.post<OpenAIResponse>(
        this.apiUrl,
        {
          model: this.model,
          messages,
          temperature: 0.7,
          max_tokens: 600
        },
        this.axiosConfig
      );

      const analysis = response.data.choices[0].message.content;

      // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞
      const lines = analysis.split('\n').filter(line => line.trim());
      const summary = lines[0] || '–î–∏–∞–ª–æ–≥ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–∞—è —Ä–∞–±–æ—Ç–∞';
      const recommendations = lines.slice(1, 4).map(line => line.replace(/^[-‚Ä¢]\s*/, ''));
      const nextSteps = lines.slice(4, 7).map(line => line.replace(/^[-‚Ä¢]\s*/, ''));

      return { summary, recommendations, nextSteps };

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∏–∞–ª–æ–≥–∞:', error);
      return {
        summary: '–î–∏–∞–ª–æ–≥ —Ç—Ä–µ–±—É–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∏',
        recommendations: [
          '–í—ã—è—Å–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞',
          '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–±—É—á–µ–Ω–∏—è',
          '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å',
          '–î–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ'
        ],
        nextSteps: [
          '–£—Ç–æ—á–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç –∏ —Å—Ä–æ–∫–∏ –Ω–∞—á–∞–ª–∞ –æ–±—É—á–µ–Ω–∏—è',
          '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫—É—Ä—Å–∞—Ö',
          '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏–ª–∏ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ',
          '–ù–∞–∑–Ω–∞—á–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è'
        ]
      };
    }
  }
}
