import TelegramBot from 'node-telegram-bot-api';
import { AIAgent } from '../ai/aiAgent';
import { conversationManager } from '../database/conversationManager';
import dotenv from 'dotenv';

dotenv.config();

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

if (!BOT_TOKEN) {
  throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
}

export class SimpleTelegramBot {
  private bot: TelegramBot;

  constructor() {
    this.bot = new TelegramBot(BOT_TOKEN!, { polling: true });
    this.setupHandlers();
  }

  private setupHandlers() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    this.bot.onText(/\/start/, async (msg) => {
      const chatId = msg.chat.id;
      const userId = msg.from?.id.toString() || chatId.toString();
      const userName = msg.from?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

      try {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
        const conversationId = await conversationManager.createConversation(
          userId,
          userName,
          msg.from?.username || ''
        );

        await this.bot.sendMessage(
          chatId,
          `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SOINTERA! üé®\n\n` +
          `–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –ø–æ –∫–æ–ª–æ—Ä–∏—Å—Ç–∏–∫–µ –∏ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–º—É –∏—Å–∫—É—Å—Å—Ç–≤—É.\n\n` +
          `–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`
        );
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start:', error);
        await this.bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    this.bot.on('message', async (msg) => {
      if (!msg.text || msg.text.startsWith('/')) return;

      const chatId = msg.chat.id;
      const userId = msg.from?.id.toString() || chatId.toString();
      const userName = msg.from?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      const messageText = msg.text;

      try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
        await this.bot.sendChatAction(chatId, 'typing');

        // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥
        let conversationId = await conversationManager.getActiveConversation(userId);

        if (!conversationId) {
          conversationId = await conversationManager.createConversation(
            userId,
            userName,
            msg.from?.username || ''
          );
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await conversationManager.addMessage(conversationId, 'user', messageText);

        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        const response = await processAIResponse(conversationId, messageText);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await this.bot.sendMessage(chatId, response, {
          parse_mode: 'Markdown',
          disable_web_page_preview: true
        });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        await conversationManager.addMessage(conversationId, 'assistant', response);

      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        await this.bot.sendMessage(
          chatId,
          '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        );
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫ (–µ—Å–ª–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã)
    this.bot.on('callback_query', async (callbackQuery) => {
      const msg = callbackQuery.message;
      const data = callbackQuery.data;

      if (!msg || !data) return;

      await this.bot.answerCallbackQuery(callbackQuery.id, {
        text: '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –≤—ã–±–æ—Ä...'
      });

      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫
    });

    console.log('‚úÖ SimpleTelegramBot handlers –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  async start() {
    console.log('üöÄ SimpleTelegramBot –∑–∞–ø—É—â–µ–Ω!');
    console.log('üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
  }
}
