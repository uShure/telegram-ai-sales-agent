#!/usr/bin/env bun

import { isAskingForDetails, isGeneralRequest } from './src/data/qualification-logic.ts';

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –¢–†–ò–ì–ì–ï–†–û–í\n');
console.log('=' .repeat(50));

const testPhrases = [
  '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫—É—Ä—Å—ã',
  '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫—É—Ä—Å—ã',
  '—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ –∫—É—Ä—Å—ã',
  '–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã',
  '–æ—á–Ω—ã–µ –∫—É—Ä—Å—ã',
  '–æ–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã',
  '–ø—Ä–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç',
  '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –¥–Ω–∫',
  '1',
  '–¥–æ—Ä–æ–≥–æ'
];

console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:\n');

testPhrases.forEach(phrase => {
  const isGeneral = isGeneralRequest(phrase);
  const isDetails = isAskingForDetails(phrase);

  console.log(`"${phrase}"`);
  console.log(`  üìã –û–±—â–∏–π –∑–∞–ø—Ä–æ—Å: ${isGeneral ? '–î–ê' : '–ù–ï–¢'}`);
  console.log(`  üìñ –î–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞: ${isDetails ? '–î–ê' : '–ù–ï–¢'}`);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ aiAgent.ts
  let result = '';
  if (!isGeneral && isDetails) {
    result = 'üìñ –î–ï–¢–ê–õ–ò';
  } else if (isGeneral) {
    result = 'üéØ –ö–í–ê–õ–ò–§–ò–ö–ê–¶–ò–Ø';
  } else {
    result = '‚û°Ô∏è –î—Ä—É–≥–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏';
  }

  console.log(`  üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}\n`);
});

console.log('=' .repeat(50));
console.log('\n‚úÖ –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
console.log('- "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫—É—Ä—Å—ã" ‚Üí –ö–í–ê–õ–ò–§–ò–ö–ê–¶–ò–Ø');
console.log('- "–ø—Ä–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç" ‚Üí –î–ï–¢–ê–õ–ò');
console.log('- "–æ—á–Ω—ã–µ –∫—É—Ä—Å—ã" ‚Üí –î—Ä—É–≥–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å)');
console.log('- "1" ‚Üí –î–ï–¢–ê–õ–ò');
